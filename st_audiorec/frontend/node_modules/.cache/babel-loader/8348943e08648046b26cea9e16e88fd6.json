{"ast":null,"code":"import _toConsumableArray from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n/** @ignore */\n\nexport var JSONTypeAssembler = /*#__PURE__*/function (_Visitor) {\n  _inherits(JSONTypeAssembler, _Visitor);\n\n  var _super = _createSuper(JSONTypeAssembler);\n\n  function JSONTypeAssembler() {\n    _classCallCheck(this, JSONTypeAssembler);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(JSONTypeAssembler, [{\n    key: \"visit\",\n    value: function visit(node) {\n      return node == null ? undefined : _get(_getPrototypeOf(JSONTypeAssembler.prototype), \"visit\", this).call(this, node);\n    }\n  }, {\n    key: \"visitNull\",\n    value: function visitNull(_ref) {\n      var typeId = _ref.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(_ref2) {\n      var typeId = _ref2.typeId,\n          bitWidth = _ref2.bitWidth,\n          isSigned = _ref2.isSigned;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'bitWidth': bitWidth,\n        'isSigned': isSigned\n      };\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(_ref3) {\n      var typeId = _ref3.typeId,\n          precision = _ref3.precision;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'precision': Precision[precision]\n      };\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(_ref4) {\n      var typeId = _ref4.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(_ref5) {\n      var typeId = _ref5.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(_ref6) {\n      var typeId = _ref6.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(_ref7) {\n      var typeId = _ref7.typeId,\n          scale = _ref7.scale,\n          precision = _ref7.precision;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'scale': scale,\n        'precision': precision\n      };\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(_ref8) {\n      var typeId = _ref8.typeId,\n          unit = _ref8.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': DateUnit[unit]\n      };\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(_ref9) {\n      var typeId = _ref9.typeId,\n          unit = _ref9.unit,\n          bitWidth = _ref9.bitWidth;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': TimeUnit[unit],\n        bitWidth: bitWidth\n      };\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(_ref10) {\n      var typeId = _ref10.typeId,\n          timezone = _ref10.timezone,\n          unit = _ref10.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': TimeUnit[unit],\n        timezone: timezone\n      };\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(_ref11) {\n      var typeId = _ref11.typeId,\n          unit = _ref11.unit;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'unit': IntervalUnit[unit]\n      };\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(_ref12) {\n      var typeId = _ref12.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(_ref13) {\n      var typeId = _ref13.typeId;\n      return {\n        'name': ArrowType[typeId].toLowerCase()\n      };\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(_ref14) {\n      var typeId = _ref14.typeId,\n          mode = _ref14.mode,\n          typeIds = _ref14.typeIds;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'mode': UnionMode[mode],\n        'typeIds': _toConsumableArray(typeIds)\n      };\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(node) {\n      return this.visit(node.dictionary);\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(_ref15) {\n      var typeId = _ref15.typeId,\n          byteWidth = _ref15.byteWidth;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'byteWidth': byteWidth\n      };\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(_ref16) {\n      var typeId = _ref16.typeId,\n          listSize = _ref16.listSize;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'listSize': listSize\n      };\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(_ref17) {\n      var typeId = _ref17.typeId,\n          keysSorted = _ref17.keysSorted;\n      return {\n        'name': ArrowType[typeId].toLowerCase(),\n        'keysSorted': keysSorted\n      };\n    }\n  }]);\n\n  return JSONTypeAssembler;\n}(Visitor);","map":{"version":3,"mappings":"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","names":["Visitor","ArrowType","Precision","DateUnit","TimeUnit","IntervalUnit","UnionMode","JSONTypeAssembler","node","undefined","typeId","toLowerCase","bitWidth","isSigned","precision","scale","unit","timezone","mode","typeIds","visit","dictionary","byteWidth","listSize","keysSorted"],"sources":["visitor/jsontypeassembler.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport * as type from '../type';\nimport { Visitor } from '../visitor';\nimport { ArrowType, Precision, DateUnit, TimeUnit, IntervalUnit, UnionMode } from '../enum';\n\n/** @ignore */\nexport interface JSONTypeAssembler extends Visitor {\n    visit<T extends type.DataType>(node: T): object | undefined;\n}\n\n/** @ignore */\nexport class JSONTypeAssembler extends Visitor {\n    public visit<T extends type.DataType>(node: T): object | undefined {\n        return node == null ? undefined : super.visit(node);\n    }\n    public visitNull<T extends type.Null>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitInt<T extends type.Int>({ typeId, bitWidth, isSigned }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'bitWidth': bitWidth, 'isSigned': isSigned };\n    }\n    public visitFloat<T extends type.Float>({ typeId, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'precision': Precision[precision] };\n    }\n    public visitBinary<T extends type.Binary>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitBool<T extends type.Bool>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUtf8<T extends type.Utf8>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitDecimal<T extends type.Decimal>({ typeId, scale, precision }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'scale': scale, 'precision': precision };\n    }\n    public visitDate<T extends type.Date_>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': DateUnit[unit] };\n    }\n    public visitTime<T extends type.Time>({ typeId, unit, bitWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], bitWidth };\n    }\n    public visitTimestamp<T extends type.Timestamp>({ typeId, timezone, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': TimeUnit[unit], timezone };\n    }\n    public visitInterval<T extends type.Interval>({ typeId, unit }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'unit': IntervalUnit[unit] };\n    }\n    public visitList<T extends type.List>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitStruct<T extends type.Struct>({ typeId }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase() };\n    }\n    public visitUnion<T extends type.Union>({ typeId, mode, typeIds }: T) {\n        return {\n            'name': ArrowType[typeId].toLowerCase(),\n            'mode': UnionMode[mode],\n            'typeIds': [...typeIds]\n        };\n    }\n    public visitDictionary<T extends type.Dictionary>(node: T) {\n        return this.visit(node.dictionary);\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>({ typeId, byteWidth }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'byteWidth': byteWidth };\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>({ typeId, listSize }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'listSize': listSize };\n    }\n    public visitMap<T extends type.Map_>({ typeId, keysSorted }: T) {\n        return { 'name': ArrowType[typeId].toLowerCase(), 'keysSorted': keysSorted };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}