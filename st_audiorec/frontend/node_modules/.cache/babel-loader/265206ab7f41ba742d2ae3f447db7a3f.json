{"ast":null,"code":"import _classCallCheck from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Field } from '../schema';\nimport { Map_ } from '../type';\nimport { VariableWidthBuilder } from '../builder';\n/** @ignore */\n\nexport var MapBuilder = /*#__PURE__*/function (_VariableWidthBuilder) {\n  _inherits(MapBuilder, _VariableWidthBuilder);\n\n  var _super = _createSuper(MapBuilder);\n\n  function MapBuilder() {\n    _classCallCheck(this, MapBuilder);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapBuilder, [{\n    key: \"set\",\n    value: function set(index, value) {\n      return _get(_getPrototypeOf(MapBuilder.prototype), \"set\", this).call(this, index, value);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      value = value instanceof Map ? value : new Map(Object.entries(value));\n      var pending = this._pending || (this._pending = new Map());\n      var current = pending.get(index);\n      current && (this._pendingLength -= current.size);\n      this._pendingLength += value.size;\n      pending.set(index, value);\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild(child) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\".concat(this.numChildren);\n\n      if (this.numChildren > 0) {\n        throw new Error('ListBuilder can only have one child.');\n      }\n\n      this.children[this.numChildren] = child;\n      this.type = new Map_(new Field(name, child.type, true), this.type.keysSorted);\n      return this.numChildren - 1;\n    }\n  }, {\n    key: \"_flushPending\",\n    value: function _flushPending(pending) {\n      var _this = this;\n\n      var offsets = this._offsets;\n      var setValue = this._setValue;\n      pending.forEach(function (value, index) {\n        if (value === undefined) {\n          offsets.set(index, 0);\n        } else {\n          offsets.set(index, value.size);\n          setValue(_this, index, value);\n        }\n      });\n    }\n  }]);\n\n  return MapBuilder;\n}(VariableWidthBuilder);","map":{"version":3,"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,KAAT,QAAsB,WAAtB;AACA,SAAmBC,IAAnB,QAAuC,SAAvC;AACA,SAAkBC,oBAAlB,QAA8C,YAA9C;AAMA;;AACA,WAAaC,UAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WAGW,aAAIC,KAAJ,EAAmBC,KAAnB,EAAmD;AACtD,iFAAiBD,KAAjB,EAAwBC,KAAxB;AACH;AALL;AAAA;AAAA,WAOW,kBAASD,KAAT,EAAwBC,KAAxB,EAAgD;AACnDA,WAAK,GAAGA,KAAK,YAAYC,GAAjB,GAAuBD,KAAvB,GAA+B,IAAIC,GAAJ,CAAQC,MAAM,CAACC,OAAP,CAAeH,KAAf,CAAR,CAAvC;AACA,UAAMI,OAAO,GAAG,KAAKC,QAAL,KAAkB,KAAKA,QAAL,GAAgB,IAAIJ,GAAJ,EAAlC,CAAhB;AACA,UAAMK,OAAO,GAAGF,OAAO,CAACG,GAAR,CAAYR,KAAZ,CAAhB;AACAO,aAAO,KAAK,KAAKE,cAAL,IAAuBF,OAAO,CAACG,IAApC,CAAP;AACA,WAAKD,cAAL,IAAuBR,KAAK,CAACS,IAA7B;AACAL,aAAO,CAACM,GAAR,CAAYX,KAAZ,EAAmBC,KAAnB;AACH;AAdL;AAAA;AAAA,WAgBW,kBAASW,KAAT,EAAmF;AAAA,UAA5BC,IAA4B,iFAAlB,KAAKC,WAAa;;AACtF,UAAI,KAAKA,WAAL,GAAmB,CAAvB,EAA0B;AACtB,cAAM,IAAIC,KAAJ,CAAU,sCAAV,CAAN;AACH;;AACD,WAAKC,QAAL,CAAc,KAAKF,WAAnB,IAAkCF,KAAlC;AACA,WAAKK,IAAL,GAAY,IAAIpB,IAAJ,CAAe,IAAID,KAAJ,CAAUiB,IAAV,EAAgBD,KAAK,CAACK,IAAtB,EAA4B,IAA5B,CAAf,EAAkD,KAAKA,IAAL,CAAUC,UAA5D,CAAZ;AACA,aAAO,KAAKJ,WAAL,GAAmB,CAA1B;AACH;AAvBL;AAAA;AAAA,WAyBc,uBAAcT,OAAd,EAAsC;AAAA;;AAC5C,UAAMc,OAAO,GAAG,KAAKC,QAArB;AACA,UAAMC,QAAQ,GAAG,KAAKC,SAAtB;AACAjB,aAAO,CAACkB,OAAR,CAAgB,UAACtB,KAAD,EAAQD,KAAR,EAAiB;AAC7B,YAAIC,KAAK,KAAKuB,SAAd,EAAyB;AACrBL,iBAAO,CAACR,GAAR,CAAYX,KAAZ,EAAmB,CAAnB;AACH,SAFD,MAEO;AACHmB,iBAAO,CAACR,GAAR,CAAYX,KAAZ,EAAmBC,KAAK,CAACS,IAAzB;AACAW,kBAAQ,CAAC,KAAD,EAAOrB,KAAP,EAAcC,KAAd,CAAR;AACH;AACJ,OAPD;AAQH;AApCL;;AAAA;AAAA,EAAiGH,oBAAjG","names":["Field","Map_","VariableWidthBuilder","MapBuilder","index","value","Map","Object","entries","pending","_pending","current","get","_pendingLength","size","set","child","name","numChildren","Error","children","type","keysSorted","offsets","_offsets","setValue","_setValue","forEach","undefined"],"sources":["builder/map.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from '../schema';\nimport { DataType, Map_, Struct } from '../type';\nimport { Builder, VariableWidthBuilder } from '../builder';\n\n/** @ignore */ type MapValue<K extends DataType = any, V extends DataType = any> = Map_<K, V>['TValue'];\n/** @ignore */ type MapValues<K extends DataType = any, V extends DataType = any> = Map<number, MapValue<K, V> | undefined>;\n/** @ignore */ type MapValueExt<K extends DataType = any, V extends DataType = any> = MapValue<K, V> | { [key: string]: V } | { [key: number]: V } ;\n\n/** @ignore */\nexport class MapBuilder<K extends DataType = any, V extends DataType = any, TNull = any> extends VariableWidthBuilder<Map_<K, V>, TNull> {\n\n    protected _pending: MapValues<K, V> | undefined;\n    public set(index: number, value: MapValueExt<K, V> | TNull) {\n        return super.set(index, value as MapValue<K, V> | TNull);\n    }\n\n    public setValue(index: number, value: MapValueExt<K, V>) {\n        value = value instanceof Map ? value : new Map(Object.entries(value));\n        const pending = this._pending || (this._pending = new Map() as MapValues<K, V>);\n        const current = pending.get(index);\n        current && (this._pendingLength -= current.size);\n        this._pendingLength += value.size;\n        pending.set(index, value);\n    }\n\n    public addChild(child: Builder<Struct<{ key: K, value: V }>>, name = `${this.numChildren}`) {\n        if (this.numChildren > 0) {\n            throw new Error('ListBuilder can only have one child.');\n        }\n        this.children[this.numChildren] = child;\n        this.type = new Map_<K, V>(new Field(name, child.type, true), this.type.keysSorted);\n        return this.numChildren - 1;\n    }\n\n    protected _flushPending(pending: MapValues<K, V>) {\n        const offsets = this._offsets;\n        const setValue = this._setValue;\n        pending.forEach((value, index) => {\n            if (value === undefined) {\n                offsets.set(index, 0);\n            } else {\n                offsets.set(index, value.size);\n                setValue(this, index, value);\n            }\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module"}