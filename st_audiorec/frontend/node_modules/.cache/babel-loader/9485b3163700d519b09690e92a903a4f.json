{"ast":null,"code":"import _createClass from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\n/** @ignore */\n\nexport var FloatBuilder = /*#__PURE__*/function (_FixedWidthBuilder) {\n  _inherits(FloatBuilder, _FixedWidthBuilder);\n\n  var _super = _createSuper(FloatBuilder);\n\n  function FloatBuilder() {\n    _classCallCheck(this, FloatBuilder);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(FloatBuilder);\n}(FixedWidthBuilder);\n/** @ignore */\n\nexport var Float16Builder = /*#__PURE__*/function (_FloatBuilder) {\n  _inherits(Float16Builder, _FloatBuilder);\n\n  var _super2 = _createSuper(Float16Builder);\n\n  function Float16Builder() {\n    _classCallCheck(this, Float16Builder);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Float16Builder, [{\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      // convert JS float64 to a uint16\n      this._values.set(index, float64ToUint16(value));\n    }\n  }]);\n\n  return Float16Builder;\n}(FloatBuilder);\n/** @ignore */\n\nexport var Float32Builder = /*#__PURE__*/function (_FloatBuilder2) {\n  _inherits(Float32Builder, _FloatBuilder2);\n\n  var _super3 = _createSuper(Float32Builder);\n\n  function Float32Builder() {\n    _classCallCheck(this, Float32Builder);\n\n    return _super3.apply(this, arguments);\n  }\n\n  _createClass(Float32Builder, [{\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      this._values.set(index, value);\n    }\n  }]);\n\n  return Float32Builder;\n}(FloatBuilder);\n/** @ignore */\n\nexport var Float64Builder = /*#__PURE__*/function (_FloatBuilder3) {\n  _inherits(Float64Builder, _FloatBuilder3);\n\n  var _super4 = _createSuper(Float64Builder);\n\n  function Float64Builder() {\n    _classCallCheck(this, Float64Builder);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(Float64Builder, [{\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      this._values.set(index, value);\n    }\n  }]);\n\n  return Float64Builder;\n}(FloatBuilder);","map":{"version":3,"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,iBAAT,QAAkC,YAAlC;AAGA;;AACA,WAAaC,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,EAAwED,iBAAxE;AAEA;;AACA,WAAaE,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACW,kBAASC,KAAT,EAAwBC,KAAxB,EAAqC;AACxC;AACA,WAAKC,OAAL,CAAaC,GAAb,CAAiBH,KAAjB,EAAwBJ,eAAe,CAACK,KAAD,CAAvC;AACH;AAJL;;AAAA;AAAA,EAAiDH,YAAjD;AAOA;;AACA,WAAaM,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACW,kBAASJ,KAAT,EAAwBC,KAAxB,EAAqC;AACxC,WAAKC,OAAL,CAAaC,GAAb,CAAiBH,KAAjB,EAAwBC,KAAxB;AACH;AAHL;;AAAA;AAAA,EAAiDH,YAAjD;AAMA;;AACA,WAAaO,cAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACW,kBAASL,KAAT,EAAwBC,KAAxB,EAAqC;AACxC,WAAKC,OAAL,CAAaC,GAAb,CAAiBH,KAAjB,EAAwBC,KAAxB;AACH;AAHL;;AAAA;AAAA,EAAiDH,YAAjD","names":["float64ToUint16","FixedWidthBuilder","FloatBuilder","Float16Builder","index","value","_values","set","Float32Builder","Float64Builder"],"sources":["builder/float.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { float64ToUint16 } from '../util/math';\nimport { FixedWidthBuilder } from '../builder';\nimport { Float, Float16, Float32, Float64 } from '../type';\n\n/** @ignore */\nexport class FloatBuilder<T extends Float = Float, TNull = any> extends FixedWidthBuilder<T, TNull> {}\n\n/** @ignore */\nexport class Float16Builder<TNull = any> extends FloatBuilder<Float16, TNull> {\n    public setValue(index: number, value: number) {\n        // convert JS float64 to a uint16\n        this._values.set(index, float64ToUint16(value));\n    }\n}\n\n/** @ignore */\nexport class Float32Builder<TNull = any> extends FloatBuilder<Float32, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n\n/** @ignore */\nexport class Float64Builder<TNull = any> extends FloatBuilder<Float64, TNull> {\n    public setValue(index: number, value: number) {\n        this._values.set(index, value);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}