{"ast":null,"code":"import _objectSpread from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\nimport { Type } from '../enum';\nimport { Utf8Builder } from './utf8';\nimport { Builder } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n/** @nocollapse */\n\nBuilder.new = newBuilder;\n\nfunction newBuilder(options) {\n  var type = options.type;\n  var builder = new (getBuilderConstructor.getVisitFn(type)())(options);\n\n  if (type.children && type.children.length > 0) {\n    var children = options['children'] || [];\n    var defaultOptions = {\n      'nullValues': options['nullValues']\n    };\n    var getChildOptions = Array.isArray(children) ? function (_, i) {\n      return children[i] || defaultOptions;\n    } : function (_ref) {\n      var name = _ref.name;\n      return children[name] || defaultOptions;\n    };\n    type.children.forEach(function (field, index) {\n      var type = field.type;\n      var opts = getChildOptions(field, index);\n      builder.children.push(newBuilder(_objectSpread(_objectSpread({}, opts), {}, {\n        type: type\n      })));\n    });\n  }\n\n  return builder;\n}\n\nObject.keys(Type).map(function (T) {\n  return Type[T];\n}).filter(function (T) {\n  return typeof T === 'number' && T !== Type.NONE;\n}).forEach(function (typeId) {\n  var BuilderCtor = getBuilderConstructor.visit(typeId);\n  BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n});\nUtf8Builder.prototype._setValue = setVisitor.visitBinary;","map":{"version":3,"mappings":"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","names":["Builder","BoolBuilder","NullBuilder","DateBuilder","DateDayBuilder","DateMillisecondBuilder","DecimalBuilder","DictionaryBuilder","FixedSizeBinaryBuilder","FloatBuilder","Float16Builder","Float32Builder","Float64Builder","IntBuilder","Int8Builder","Int16Builder","Int32Builder","Int64Builder","Uint8Builder","Uint16Builder","Uint32Builder","Uint64Builder","TimeBuilder","TimeSecondBuilder","TimeMillisecondBuilder","TimeMicrosecondBuilder","TimeNanosecondBuilder","TimestampBuilder","TimestampSecondBuilder","TimestampMillisecondBuilder","TimestampMicrosecondBuilder","TimestampNanosecondBuilder","IntervalBuilder","IntervalDayTimeBuilder","IntervalYearMonthBuilder","Utf8Builder","BinaryBuilder","ListBuilder","FixedSizeListBuilder","MapBuilder","StructBuilder","UnionBuilder","SparseUnionBuilder","DenseUnionBuilder","Type","instance","setVisitor","getBuilderConstructor","new","newBuilder","options","type","builder","getVisitFn","children","length","defaultOptions","getChildOptions","Array","isArray","_","i","name","forEach","field","index","opts","push","Object","keys","map","T","filter","NONE","typeId","BuilderCtor","visit","prototype","_setValue","visitBinary"],"sources":["builder/index.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\n/** @ignore */\nexport { Builder, BuilderOptions } from '../builder';\nexport { BoolBuilder } from './bool';\nexport { NullBuilder } from './null';\nexport { DateBuilder, DateDayBuilder, DateMillisecondBuilder } from './date';\nexport { DecimalBuilder } from './decimal';\nexport { DictionaryBuilder } from './dictionary';\nexport { FixedSizeBinaryBuilder } from './fixedsizebinary';\nexport { FloatBuilder, Float16Builder, Float32Builder, Float64Builder } from './float';\nexport { IntBuilder, Int8Builder, Int16Builder, Int32Builder, Int64Builder, Uint8Builder, Uint16Builder, Uint32Builder, Uint64Builder } from './int';\nexport { TimeBuilder, TimeSecondBuilder, TimeMillisecondBuilder, TimeMicrosecondBuilder, TimeNanosecondBuilder } from './time';\nexport { TimestampBuilder, TimestampSecondBuilder, TimestampMillisecondBuilder, TimestampMicrosecondBuilder, TimestampNanosecondBuilder } from './timestamp';\nexport { IntervalBuilder, IntervalDayTimeBuilder, IntervalYearMonthBuilder } from './interval';\nexport { Utf8Builder } from './utf8';\nexport { BinaryBuilder } from './binary';\nexport { ListBuilder } from './list';\nexport { FixedSizeListBuilder } from './fixedsizelist';\nexport { MapBuilder } from './map';\nexport { StructBuilder } from './struct';\nexport { UnionBuilder, SparseUnionBuilder, DenseUnionBuilder } from './union';\n\nimport { Type } from '../enum';\nimport { Field } from '../schema';\nimport { DataType } from '../type';\nimport { Utf8Builder } from './utf8';\nimport { BuilderType as B } from '../interfaces';\nimport { Builder, BuilderOptions } from '../builder';\nimport { instance as setVisitor } from '../visitor/set';\nimport { instance as getBuilderConstructor } from '../visitor/builderctor';\n\n/** @nocollapse */\nBuilder.new = newBuilder;\n\nfunction newBuilder<T extends DataType = any, TNull = any>(options: BuilderOptions<T, TNull>): B<T, TNull> {\n\n    const type = options.type;\n    const builder = new (getBuilderConstructor.getVisitFn<T>(type)())(options) as Builder<T, TNull>;\n\n    if (type.children && type.children.length > 0) {\n\n        const children = options['children'] || [] as BuilderOptions[];\n        const defaultOptions = { 'nullValues': options['nullValues'] };\n        const getChildOptions = Array.isArray(children)\n            ? ((_: Field, i: number) => children[i] || defaultOptions)\n            : (({ name }: Field) => children[name] || defaultOptions);\n\n        type.children.forEach((field, index) => {\n            const { type } = field;\n            const opts = getChildOptions(field, index);\n            builder.children.push(newBuilder({ ...opts, type }));\n        });\n    }\n\n    return builder as B<T, TNull>;\n}\n\n(Object.keys(Type) as any[])\n    .map((T: any) => Type[T] as any)\n    .filter((T: any): T is Type => typeof T === 'number' && T !== Type.NONE)\n    .forEach((typeId) => {\n        const BuilderCtor = getBuilderConstructor.visit(typeId);\n        BuilderCtor.prototype._setValue = setVisitor.getVisitFn(typeId);\n    });\n\n(Utf8Builder.prototype as any)._setValue = setVisitor.visitBinary;\n"]},"metadata":{},"sourceType":"module"}