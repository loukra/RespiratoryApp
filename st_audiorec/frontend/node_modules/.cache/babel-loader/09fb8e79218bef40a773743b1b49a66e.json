{"ast":null,"code":"import _regeneratorRuntime from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { toUint8Array } from '../../util/buffer';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n/** @ignore */\n\nexport function toDOMStream(source, options) {\n  if (isAsyncIterable(source)) {\n    return asyncIterableAsReadableDOMStream(source, options);\n  }\n\n  if (isIterable(source)) {\n    return iterableAsReadableDOMStream(source, options);\n  }\n  /* istanbul ignore next */\n\n\n  throw new Error(\"toDOMStream() must be called with an Iterable or AsyncIterable\");\n}\n/** @ignore */\n\nfunction iterableAsReadableDOMStream(source, options) {\n  var it = null;\n  var bm = options && options.type === 'bytes' || false;\n  var hwm = options && options.highWaterMark || Math.pow(2, 24);\n  return new ReadableStream(_objectSpread(_objectSpread({}, options), {}, {\n    start: function start(controller) {\n      next(controller, it || (it = source[Symbol.iterator]()));\n    },\n    pull: function pull(controller) {\n      it ? next(controller, it) : controller.close();\n    },\n    cancel: function cancel() {\n      (it && it.return && it.return() || true) && (it = null);\n    }\n  }), _objectSpread({\n    highWaterMark: bm ? hwm : undefined\n  }, options));\n\n  function next(controller, it) {\n    var buf;\n    var r = null;\n    var size = controller.desiredSize || null;\n\n    while (!(r = it.next(bm ? size : null)).done) {\n      if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n        size != null && bm && (size = size - buf.byteLength + 1);\n        r.value = buf;\n      }\n\n      controller.enqueue(r.value);\n\n      if (size != null && --size <= 0) {\n        return;\n      }\n    }\n\n    controller.close();\n  }\n}\n/** @ignore */\n\n\nfunction asyncIterableAsReadableDOMStream(source, options) {\n  var it = null;\n  var bm = options && options.type === 'bytes' || false;\n  var hwm = options && options.highWaterMark || Math.pow(2, 24);\n  return new ReadableStream(_objectSpread(_objectSpread({}, options), {}, {\n    start: function start(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return next(controller, it || (it = source[Symbol.asyncIterator]()));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    pull: function pull(controller) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!it) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return next(controller, it);\n\n              case 3:\n                _context2.next = 6;\n                break;\n\n              case 5:\n                controller.close();\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    cancel: function cancel() {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t1 = it;\n\n                if (!_context3.t1) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _context3.t2 = it.return;\n\n                if (!_context3.t2) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 6;\n                return it.return();\n\n              case 6:\n                _context3.t2 = _context3.sent;\n\n              case 7:\n                _context3.t1 = _context3.t2;\n\n              case 8:\n                _context3.t0 = _context3.t1;\n\n                if (_context3.t0) {\n                  _context3.next = 11;\n                  break;\n                }\n\n                _context3.t0 = true;\n\n              case 11:\n                _context3.t3 = _context3.t0;\n\n                if (!_context3.t3) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                it = null;\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  }), _objectSpread({\n    highWaterMark: bm ? hwm : undefined\n  }, options));\n\n  function next(_x, _x2) {\n    return _next.apply(this, arguments);\n  }\n\n  function _next() {\n    _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(controller, it) {\n      var buf, r, size;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              r = null;\n              size = controller.desiredSize || null;\n\n            case 2:\n              _context4.next = 4;\n              return it.next(bm ? size : null);\n\n            case 4:\n              if ((r = _context4.sent).done) {\n                _context4.next = 11;\n                break;\n              }\n\n              if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = buf;\n              }\n\n              controller.enqueue(r.value);\n\n              if (!(size != null && --size <= 0)) {\n                _context4.next = 9;\n                break;\n              }\n\n              return _context4.abrupt(\"return\");\n\n            case 9:\n              _context4.next = 2;\n              break;\n\n            case 11:\n              controller.close();\n\n            case 12:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _next.apply(this, arguments);\n  }\n}","map":{"version":3,"mappings":"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","names":["toUint8Array","isIterable","isAsyncIterable","toDOMStream","source","options","asyncIterableAsReadableDOMStream","iterableAsReadableDOMStream","Error","it","bm","type","hwm","highWaterMark","ReadableStream","start","controller","next","Symbol","iterator","pull","close","cancel","return","undefined","buf","r","size","desiredSize","done","ArrayBuffer","isView","value","byteLength","enqueue","asyncIterator"],"sources":["io/whatwg/iterable.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { toUint8Array } from '../../util/buffer';\nimport { ReadableDOMStreamOptions } from '../../io/interfaces';\nimport { isIterable, isAsyncIterable } from '../../util/compat';\n\n/** @ignore */\nexport function toDOMStream<T>(source: Iterable<T> | AsyncIterable<T>, options?: ReadableDOMStreamOptions): ReadableStream<T> {\n    if (isAsyncIterable<T>(source)) { return asyncIterableAsReadableDOMStream(source, options); }\n    if (isIterable<T>(source)) { return iterableAsReadableDOMStream(source, options); }\n    /* istanbul ignore next */\n    throw new Error(`toDOMStream() must be called with an Iterable or AsyncIterable`);\n}\n\n/** @ignore */\nfunction iterableAsReadableDOMStream<T>(source: Iterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: Iterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        start(controller) { next(controller, it || (it = source[Symbol.iterator]())); },\n        pull(controller) { it ? (next(controller, it)) : controller.close(); },\n        cancel() { (it && (it.return && it.return()) || true) && (it = null); }\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    function next(controller: ReadableStreamDefaultController<T>, it: Iterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n\n/** @ignore */\nfunction asyncIterableAsReadableDOMStream<T>(source: AsyncIterable<T>, options?: ReadableDOMStreamOptions) {\n\n    let it: AsyncIterator<T> | null = null;\n    const bm = (options && options.type === 'bytes') || false;\n    const hwm = options && options.highWaterMark || (2 ** 24);\n\n    return new ReadableStream<T>({\n        ...options as any,\n        async start(controller) { await next(controller, it || (it = source[Symbol.asyncIterator]())); },\n        async pull(controller) { it ? (await next(controller, it)) : controller.close(); },\n        async cancel() { (it && (it.return && await it.return()) || true) && (it = null); },\n    }, { highWaterMark: bm ? hwm : undefined, ...options });\n\n    async function next(controller: ReadableStreamDefaultController<T>, it: AsyncIterator<T>) {\n        let buf: Uint8Array;\n        let r: IteratorResult<T> | null = null;\n        let size = controller.desiredSize || null;\n        while (!(r = await it.next(bm ? size : null)).done) {\n            if (ArrayBuffer.isView(r.value) && (buf = toUint8Array(r.value))) {\n                size != null && bm && (size = size - buf.byteLength + 1);\n                r.value = <any> buf;\n            }\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) { return; }\n        }\n        controller.close();\n    }\n}\n"]},"metadata":{},"sourceType":"module"}