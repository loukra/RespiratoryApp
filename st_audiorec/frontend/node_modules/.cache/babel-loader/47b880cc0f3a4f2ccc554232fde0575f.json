{"ast":null,"code":"/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\n\nvar StreamlitComponentBase =\n/** @class */\nfunction (_super) {\n  __extends(StreamlitComponentBase, _super);\n\n  function StreamlitComponentBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  StreamlitComponentBase.prototype.componentDidMount = function () {\n    // After we're rendered for the first time, tell Streamlit that our height\n    // has changed.\n    Streamlit.setFrameHeight();\n  };\n\n  StreamlitComponentBase.prototype.componentDidUpdate = function () {\n    // After we're updated, tell Streamlit that our height may have changed.\n    Streamlit.setFrameHeight();\n  };\n\n  return StreamlitComponentBase;\n}(React.PureComponent);\n\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\n\nexport function withStreamlitConnection(WrappedComponent) {\n  var ComponentWrapper =\n  /** @class */\n  function (_super) {\n    __extends(ComponentWrapper, _super);\n\n    function ComponentWrapper(props) {\n      var _this = _super.call(this, props) || this;\n\n      _this.componentDidMount = function () {\n        // Set up event listeners, and signal to Streamlit that we're ready.\n        // We won't render the component until we receive the first RENDER_EVENT.\n        Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n        Streamlit.setComponentReady();\n      };\n\n      _this.componentDidUpdate = function () {\n        // If our child threw an error, we display it in render(). In this\n        // case, the child won't be mounted and therefore won't call\n        // `setFrameHeight` on its own. We do it here so that the rendered\n        // error will be visible.\n        if (_this.state.componentError != null) {\n          Streamlit.setFrameHeight();\n        }\n      };\n\n      _this.componentWillUnmount = function () {\n        Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n      };\n      /**\n       * Streamlit is telling this component to redraw.\n       * We save the render data in State, so that it can be passed to the\n       * component in our own render() function.\n       */\n\n\n      _this.onRenderEvent = function (event) {\n        // Update our state with the newest render data\n        var renderEvent = event;\n\n        _this.setState({\n          renderData: renderEvent.detail\n        });\n      };\n\n      _this.render = function () {\n        // If our wrapped component threw an error, display it.\n        if (_this.state.componentError != null) {\n          return React.createElement(\"div\", null, React.createElement(\"h1\", null, \"Component Error\"), React.createElement(\"span\", null, _this.state.componentError.message));\n        } // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n\n\n        if (_this.state.renderData == null) {\n          return null;\n        }\n\n        return React.createElement(WrappedComponent, {\n          width: window.innerWidth,\n          disabled: _this.state.renderData.disabled,\n          args: _this.state.renderData.args,\n          theme: _this.state.renderData.theme\n        });\n      };\n\n      _this.state = {\n        renderData: undefined,\n        componentError: undefined\n      };\n      return _this;\n    }\n    /**\n     * Error boundary function. This will be called if our wrapped\n     * component throws an error. We store the caught error in our state,\n     * and display it in the next render().\n     */\n\n\n    ComponentWrapper.getDerivedStateFromError = function (error) {\n      return {\n        componentError: error\n      };\n    };\n\n    return ComponentWrapper;\n  }(React.PureComponent);\n\n  return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}","map":{"version":3,"sources":["/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/streamlit-component-lib/dist/StreamlitReact.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","hoistNonReactStatics","React","Streamlit","StreamlitComponentBase","_super","apply","arguments","componentDidMount","setFrameHeight","componentDidUpdate","PureComponent","withStreamlitConnection","WrappedComponent","ComponentWrapper","props","_this","call","events","addEventListener","RENDER_EVENT","onRenderEvent","setComponentReady","state","componentError","componentWillUnmount","removeEventListener","event","renderEvent","setState","renderData","detail","render","createElement","message","width","window","innerWidth","disabled","args","theme","undefined","getDerivedStateFromError","error"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\nimport React from \"react\";\nimport { Streamlit } from \"./streamlit\";\n/**\n * Optional Streamlit React-based component base class.\n *\n * You are not required to extend this base class to create a Streamlit\n * component. If you decide not to extend it, you should implement the\n * `componentDidMount` and `componentDidUpdate` functions in your own class,\n * so that your plugin properly resizes.\n */\nvar StreamlitComponentBase = /** @class */ (function (_super) {\n    __extends(StreamlitComponentBase, _super);\n    function StreamlitComponentBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StreamlitComponentBase.prototype.componentDidMount = function () {\n        // After we're rendered for the first time, tell Streamlit that our height\n        // has changed.\n        Streamlit.setFrameHeight();\n    };\n    StreamlitComponentBase.prototype.componentDidUpdate = function () {\n        // After we're updated, tell Streamlit that our height may have changed.\n        Streamlit.setFrameHeight();\n    };\n    return StreamlitComponentBase;\n}(React.PureComponent));\nexport { StreamlitComponentBase };\n/**\n * Wrapper for React-based Streamlit components.\n *\n * Bootstraps the communication interface between Streamlit and the component.\n */\nexport function withStreamlitConnection(WrappedComponent) {\n    var ComponentWrapper = /** @class */ (function (_super) {\n        __extends(ComponentWrapper, _super);\n        function ComponentWrapper(props) {\n            var _this = _super.call(this, props) || this;\n            _this.componentDidMount = function () {\n                // Set up event listeners, and signal to Streamlit that we're ready.\n                // We won't render the component until we receive the first RENDER_EVENT.\n                Streamlit.events.addEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n                Streamlit.setComponentReady();\n            };\n            _this.componentDidUpdate = function () {\n                // If our child threw an error, we display it in render(). In this\n                // case, the child won't be mounted and therefore won't call\n                // `setFrameHeight` on its own. We do it here so that the rendered\n                // error will be visible.\n                if (_this.state.componentError != null) {\n                    Streamlit.setFrameHeight();\n                }\n            };\n            _this.componentWillUnmount = function () {\n                Streamlit.events.removeEventListener(Streamlit.RENDER_EVENT, _this.onRenderEvent);\n            };\n            /**\n             * Streamlit is telling this component to redraw.\n             * We save the render data in State, so that it can be passed to the\n             * component in our own render() function.\n             */\n            _this.onRenderEvent = function (event) {\n                // Update our state with the newest render data\n                var renderEvent = event;\n                _this.setState({ renderData: renderEvent.detail });\n            };\n            _this.render = function () {\n                // If our wrapped component threw an error, display it.\n                if (_this.state.componentError != null) {\n                    return (React.createElement(\"div\", null,\n                        React.createElement(\"h1\", null, \"Component Error\"),\n                        React.createElement(\"span\", null, _this.state.componentError.message)));\n                }\n                // Don't render until we've gotten our first RENDER_EVENT from Streamlit.\n                if (_this.state.renderData == null) {\n                    return null;\n                }\n                return (React.createElement(WrappedComponent, { width: window.innerWidth, disabled: _this.state.renderData.disabled, args: _this.state.renderData.args, theme: _this.state.renderData.theme }));\n            };\n            _this.state = {\n                renderData: undefined,\n                componentError: undefined\n            };\n            return _this;\n        }\n        /**\n         * Error boundary function. This will be called if our wrapped\n         * component throws an error. We store the caught error in our state,\n         * and display it in the next render().\n         */\n        ComponentWrapper.getDerivedStateFromError = function (error) {\n            return { componentError: error };\n        };\n        return ComponentWrapper;\n    }(React.PureComponent));\n    return hoistNonReactStatics(ComponentWrapper, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}