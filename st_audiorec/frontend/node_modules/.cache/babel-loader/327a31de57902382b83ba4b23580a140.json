{"ast":null,"code":"import _regeneratorRuntime from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nfunction _asyncIterator(iterable) { var method, async, sync, retry = 2; for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) { if (async && null != (method = iterable[async])) return method.call(iterable); if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable)); async = \"@@asyncIterator\", sync = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n\nfunction AsyncFromSyncIterator(s) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var done = r.done; return Promise.resolve(r.value).then(function (value) { return { value: value, done: done }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) { this.s = s, this.n = s.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(value) { var ret = this.s.return; return void 0 === ret ? Promise.resolve({ value: value, done: !0 }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments)); }, throw: function _throw(value) { var thr = this.s.return; return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(s); }\n\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays } from '../util/buffer';\nimport { isPromise, isFetchResponse, isIterable, isAsyncIterable, isReadableDOMStream, isReadableNodeStream } from '../util/compat';\n/** @ignore */\n\nexport var AsyncByteQueue = /*#__PURE__*/function (_AsyncQueue) {\n  _inherits(AsyncByteQueue, _AsyncQueue);\n\n  var _super = _createSuper(AsyncByteQueue);\n\n  function AsyncByteQueue() {\n    _classCallCheck(this, AsyncByteQueue);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AsyncByteQueue, [{\n    key: \"write\",\n    value: function write(value) {\n      if ((value = toUint8Array(value)).byteLength > 0) {\n        return _get(_getPrototypeOf(AsyncByteQueue.prototype), \"write\", this).call(this, value);\n      }\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return sync ? decodeUtf8(this.toUint8Array(true)) : this.toUint8Array(false).then(decodeUtf8);\n    }\n  }, {\n    key: \"toUint8Array\",\n    value: function toUint8Array() {\n      var _this = this;\n\n      var sync = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return sync ? joinUint8Arrays(this._values)[0] : _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var buffers, byteLength, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, chunk;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                buffers = [], byteLength = 0;\n                _iteratorAbruptCompletion = false;\n                _didIteratorError = false;\n                _context.prev = 3;\n                _iterator = _asyncIterator(_this);\n\n              case 5:\n                _context.next = 7;\n                return _iterator.next();\n\n              case 7:\n                if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                chunk = _step.value;\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n\n              case 11:\n                _iteratorAbruptCompletion = false;\n                _context.next = 5;\n                break;\n\n              case 14:\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](3);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 20:\n                _context.prev = 20;\n                _context.prev = 21;\n\n                if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                  _context.next = 25;\n                  break;\n                }\n\n                _context.next = 25;\n                return _iterator.return();\n\n              case 25:\n                _context.prev = 25;\n\n                if (!_didIteratorError) {\n                  _context.next = 28;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 28:\n                return _context.finish(25);\n\n              case 29:\n                return _context.finish(20);\n\n              case 30:\n                return _context.abrupt(\"return\", joinUint8Arrays(buffers, byteLength)[0]);\n\n              case 31:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[3, 16, 20, 30], [21,, 25, 29]]);\n      }))();\n    }\n  }]);\n\n  return AsyncByteQueue;\n}(AsyncQueue);\n/** @ignore */\n\nexport var ByteStream = /*#__PURE__*/function (_Symbol$iterator) {\n  function ByteStream(source) {\n    _classCallCheck(this, ByteStream);\n\n    if (source) {\n      this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n    }\n  }\n\n  _createClass(ByteStream, [{\n    key: _Symbol$iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      return this.source.next(value);\n    }\n  }, {\n    key: \"throw\",\n    value: function _throw(value) {\n      return this.source.throw(value);\n    }\n  }, {\n    key: \"return\",\n    value: function _return(value) {\n      return this.source.return(value);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(size) {\n      return this.source.peek(size);\n    }\n  }, {\n    key: \"read\",\n    value: function read(size) {\n      return this.source.read(size);\n    }\n  }]);\n\n  return ByteStream;\n}(Symbol.iterator);\n/** @ignore */\n\nexport var AsyncByteStream = /*#__PURE__*/function (_Symbol$asyncIterator) {\n  function AsyncByteStream(source) {\n    _classCallCheck(this, AsyncByteStream);\n\n    if (source instanceof AsyncByteStream) {\n      this.source = source.source;\n    } else if (source instanceof AsyncByteQueue) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n    } else if (isReadableNodeStream(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n    } else if (isReadableDOMStream(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n    } else if (isFetchResponse(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body));\n    } else if (isIterable(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n    } else if (isPromise(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n    } else if (isAsyncIterable(source)) {\n      this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n    }\n  }\n\n  _createClass(AsyncByteStream, [{\n    key: _Symbol$asyncIterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next(value) {\n      return this.source.next(value);\n    }\n  }, {\n    key: \"throw\",\n    value: function _throw(value) {\n      return this.source.throw(value);\n    }\n  }, {\n    key: \"return\",\n    value: function _return(value) {\n      return this.source.return(value);\n    }\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this.source.closed;\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(reason) {\n      return this.source.cancel(reason);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(size) {\n      return this.source.peek(size);\n    }\n  }, {\n    key: \"read\",\n    value: function read(size) {\n      return this.source.read(size);\n    }\n  }]);\n\n  return AsyncByteStream;\n}(Symbol.asyncIterator);\n/** @ignore */\n\nvar ByteStreamSource = /*#__PURE__*/function () {\n  function ByteStreamSource(source) {\n    _classCallCheck(this, ByteStreamSource);\n\n    this.source = source;\n  }\n\n  _createClass(ByteStreamSource, [{\n    key: \"cancel\",\n    value: function cancel(reason) {\n      this.return(reason);\n    }\n  }, {\n    key: \"peek\",\n    value: function peek(size) {\n      return this.next(size, 'peek').value;\n    }\n  }, {\n    key: \"read\",\n    value: function read(size) {\n      return this.next(size, 'read').value;\n    }\n  }, {\n    key: \"next\",\n    value: function next(size) {\n      var cmd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'read';\n      return this.source.next({\n        cmd: cmd,\n        size: size\n      });\n    }\n  }, {\n    key: \"throw\",\n    value: function _throw(value) {\n      return Object.create(this.source.throw && this.source.throw(value) || ITERATOR_DONE);\n    }\n  }, {\n    key: \"return\",\n    value: function _return(value) {\n      return Object.create(this.source.return && this.source.return(value) || ITERATOR_DONE);\n    }\n  }]);\n\n  return ByteStreamSource;\n}();\n/** @ignore */\n\n\nvar AsyncByteStreamSource = /*#__PURE__*/function () {\n  function AsyncByteStreamSource(source) {\n    var _this2 = this;\n\n    _classCallCheck(this, AsyncByteStreamSource);\n\n    this.source = source;\n    this._closedPromise = new Promise(function (r) {\n      return _this2._closedPromiseResolve = r;\n    });\n  }\n\n  _createClass(AsyncByteStreamSource, [{\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(reason) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.return(reason);\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function cancel(_x) {\n        return _cancel.apply(this, arguments);\n      }\n\n      return cancel;\n    }()\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this._closedPromise;\n    }\n  }, {\n    key: \"read\",\n    value: function () {\n      var _read = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(size) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.next(size, 'read');\n\n              case 2:\n                return _context3.abrupt(\"return\", _context3.sent.value);\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function read(_x2) {\n        return _read.apply(this, arguments);\n      }\n\n      return read;\n    }()\n  }, {\n    key: \"peek\",\n    value: function () {\n      var _peek = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(size) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.next(size, 'peek');\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent.value);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function peek(_x3) {\n        return _peek.apply(this, arguments);\n      }\n\n      return peek;\n    }()\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(size) {\n        var cmd,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                cmd = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : 'read';\n                _context5.next = 3;\n                return this.source.next({\n                  cmd: cmd,\n                  size: size\n                });\n\n              case 3:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function next(_x4) {\n        return _next.apply(this, arguments);\n      }\n\n      return next;\n    }()\n  }, {\n    key: \"throw\",\n    value: function () {\n      var _throw2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(value) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.t1 = this.source.throw;\n\n                if (!_context6.t1) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                _context6.next = 4;\n                return this.source.throw(value);\n\n              case 4:\n                _context6.t1 = _context6.sent;\n\n              case 5:\n                _context6.t0 = _context6.t1;\n\n                if (_context6.t0) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                _context6.t0 = ITERATOR_DONE;\n\n              case 8:\n                result = _context6.t0;\n                this._closedPromiseResolve && this._closedPromiseResolve();\n                this._closedPromiseResolve = undefined;\n                return _context6.abrupt(\"return\", Object.create(result));\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function _throw(_x5) {\n        return _throw2.apply(this, arguments);\n      }\n\n      return _throw;\n    }()\n  }, {\n    key: \"return\",\n    value: function () {\n      var _return2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(value) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.t1 = this.source.return;\n\n                if (!_context7.t1) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                _context7.next = 4;\n                return this.source.return(value);\n\n              case 4:\n                _context7.t1 = _context7.sent;\n\n              case 5:\n                _context7.t0 = _context7.t1;\n\n                if (_context7.t0) {\n                  _context7.next = 8;\n                  break;\n                }\n\n                _context7.t0 = ITERATOR_DONE;\n\n              case 8:\n                result = _context7.t0;\n                this._closedPromiseResolve && this._closedPromiseResolve();\n                this._closedPromiseResolve = undefined;\n                return _context7.abrupt(\"return\", Object.create(result));\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function _return(_x6) {\n        return _return2.apply(this, arguments);\n      }\n\n      return _return;\n    }()\n  }]);\n\n  return AsyncByteStreamSource;\n}();","map":{"version":3,"mappings":"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","names":["streamAdapters","decodeUtf8","ITERATOR_DONE","AsyncQueue","toUint8Array","joinUint8Arrays","isPromise","isFetchResponse","isIterable","isAsyncIterable","isReadableDOMStream","isReadableNodeStream","AsyncByteQueue","value","byteLength","sync","then","_values","buffers","chunk","push","ByteStream","source","ByteStreamSource","fromIterable","next","throw","return","size","peek","read","Symbol","iterator","AsyncByteStream","AsyncByteStreamSource","fromAsyncIterable","fromNodeStream","fromDOMStream","body","closed","reason","cancel","asyncIterator","cmd","Object","create","_closedPromise","Promise","r","_closedPromiseResolve","result","undefined"],"sources":["io/stream.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport streamAdapters from './adapters';\nimport { decodeUtf8 } from '../util/utf8';\nimport { ITERATOR_DONE, Readable, Writable, AsyncQueue } from './interfaces';\nimport { toUint8Array, joinUint8Arrays, ArrayBufferViewInput } from '../util/buffer';\n\nimport {\n    isPromise, isFetchResponse,\n    isIterable, isAsyncIterable,\n    isReadableDOMStream, isReadableNodeStream\n} from '../util/compat';\n\n/** @ignore */\nexport type WritableSink<T> = Writable<T> | WritableStream<T> | NodeJS.WritableStream | null;\n/** @ignore */\nexport type ReadableSource<T> = Readable<T> | PromiseLike<T> | AsyncIterable<T> | ReadableStream<T> | NodeJS.ReadableStream | null;\n\n/** @ignore */\nexport class AsyncByteQueue<T extends ArrayBufferViewInput = Uint8Array> extends AsyncQueue<Uint8Array, T> {\n    public write(value: ArrayBufferViewInput | Uint8Array) {\n        if ((value = toUint8Array(value)).byteLength > 0) {\n            return super.write(value as T);\n        }\n    }\n    public toString(sync: true): string;\n    public toString(sync?: false): Promise<string>;\n    public toString(sync = false) {\n        return sync\n            ? decodeUtf8(this.toUint8Array(true))\n            : this.toUint8Array(false).then(decodeUtf8);\n    }\n    public toUint8Array(sync: true): Uint8Array;\n    public toUint8Array(sync?: false): Promise<Uint8Array>;\n    public toUint8Array(sync = false) {\n        return sync ? joinUint8Arrays(this._values as any[])[0] : (async () => {\n            let buffers = [], byteLength = 0;\n            for await (const chunk of this) {\n                buffers.push(chunk);\n                byteLength += chunk.byteLength;\n            }\n            return joinUint8Arrays(buffers, byteLength)[0];\n        })();\n    }\n}\n\n/** @ignore */\nexport class ByteStream implements IterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: ByteStreamSource<Uint8Array>;\n    constructor(source?: Iterable<ArrayBufferViewInput> | ArrayBufferViewInput) {\n        if (source) {\n            this.source = new ByteStreamSource(streamAdapters.fromIterable(source));\n        }\n    }\n    [Symbol.iterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\nexport class AsyncByteStream implements Readable<Uint8Array>, AsyncIterableIterator<Uint8Array> {\n    // @ts-ignore\n    private source: AsyncByteStreamSource<Uint8Array>;\n    constructor(source?: PromiseLike<ArrayBufferViewInput> | Response | ReadableStream<ArrayBufferViewInput> | NodeJS.ReadableStream | AsyncIterable<ArrayBufferViewInput> | Iterable<ArrayBufferViewInput>) {\n        if (source instanceof AsyncByteStream) {\n            this.source = (source as AsyncByteStream).source;\n        } else if (source instanceof AsyncByteQueue) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isReadableNodeStream(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromNodeStream(source));\n        } else if (isReadableDOMStream<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source));\n        } else if (isFetchResponse(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromDOMStream(source.body!));\n        } else if (isIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromIterable(source));\n        } else if (isPromise<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        } else if (isAsyncIterable<ArrayBufferViewInput>(source)) {\n            this.source = new AsyncByteStreamSource(streamAdapters.fromAsyncIterable(source));\n        }\n    }\n    [Symbol.asyncIterator]() { return this; }\n    public next(value?: any) { return this.source.next(value); }\n    public throw(value?: any) { return this.source.throw(value); }\n    public return(value?: any) { return this.source.return(value); }\n    public get closed(): Promise<void> { return this.source.closed; }\n    public cancel(reason?: any) { return this.source.cancel(reason); }\n    public peek(size?: number | null) { return this.source.peek(size); }\n    public read(size?: number | null) { return this.source.read(size); }\n}\n\n/** @ignore */\ninterface ByteStreamSourceIterator<T> extends IterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): IteratorResult<T>;\n}\n\n/** @ignore */\ninterface AsyncByteStreamSourceIterator<T> extends AsyncIterableIterator<T> {\n    next(value?: { cmd: 'peek' | 'read', size?: number | null }): Promise<IteratorResult<T>>;\n}\n\n/** @ignore */\nclass ByteStreamSource<T> {\n    constructor(protected source: ByteStreamSourceIterator<T>) {}\n    public cancel(reason?: any) { this.return(reason); }\n    public peek(size?: number | null): T | null { return this.next(size, 'peek').value; }\n    public read(size?: number | null): T | null { return this.next(size, 'read').value; }\n    public next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return this.source.next({ cmd, size }); }\n    public throw(value?: any) { return Object.create((this.source.throw && this.source.throw(value)) || ITERATOR_DONE); }\n    public return(value?: any) { return Object.create((this.source.return && this.source.return(value)) || ITERATOR_DONE); }\n}\n\n/** @ignore */\nclass AsyncByteStreamSource<T> implements Readable<T> {\n\n    private _closedPromise: Promise<void>;\n    private _closedPromiseResolve?: (value?: any) => void;\n    constructor (protected source: ByteStreamSourceIterator<T> | AsyncByteStreamSourceIterator<T>) {\n        this._closedPromise = new Promise((r) => this._closedPromiseResolve = r);\n    }\n    public async cancel(reason?: any) { await this.return(reason); }\n    public get closed(): Promise<void> { return this._closedPromise; }\n    public async read(size?: number | null): Promise<T | null> { return (await this.next(size, 'read')).value; }\n    public async peek(size?: number | null): Promise<T | null> { return (await this.next(size, 'peek')).value; }\n    public async next(size?: number | null, cmd: 'peek' | 'read' = 'read') { return (await this.source.next({ cmd, size })); }\n    public async throw(value?: any) {\n        const result = (this.source.throw && await this.source.throw(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n    public async return(value?: any) {\n        const result = (this.source.return && await this.source.return(value)) || ITERATOR_DONE;\n        this._closedPromiseResolve && this._closedPromiseResolve();\n        this._closedPromiseResolve = undefined;\n        return Object.create(result);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}