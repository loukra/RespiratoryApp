{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _possibleConstructorReturn from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { valueToString } from '../util/pretty';\n/** @ignore */\n\nvar kParent = Symbol.for('parent');\n/** @ignore */\n\nvar kRowIndex = Symbol.for('rowIndex');\n/** @ignore */\n\nvar kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */\n\nvar kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */\n\nvar kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nvar Row = /*#__PURE__*/function (_Symbol$iterator) {\n  function Row(parent, numKeys) {\n    _classCallCheck(this, Row);\n\n    this[kParent] = parent;\n    this.size = numKeys;\n  }\n\n  _createClass(Row, [{\n    key: \"entries\",\n    value: function entries() {\n      return this[Symbol.iterator]();\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.get(key) !== undefined;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var val = undefined;\n\n      if (key !== null && key !== undefined) {\n        var ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        var idx = ktoi.get(key);\n\n        if (idx !== undefined) {\n          var itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n          (val = itov[idx]) !== undefined || (itov[idx] = val = this.getValue(idx));\n        } else if ((idx = this.getIndex(key)) > -1) {\n          ktoi.set(key, idx);\n\n          var _itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n          (val = _itov[idx]) !== undefined || (_itov[idx] = val = this.getValue(idx));\n        }\n      }\n\n      return val;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, val) {\n      if (key !== null && key !== undefined) {\n        var ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        var idx = ktoi.get(key);\n\n        if (idx === undefined) {\n          ktoi.set(key, idx = this.getIndex(key));\n        }\n\n        if (idx > -1) {\n          var itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n          itov[idx] = this.setValue(idx, val);\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      throw new Error(\"Clearing \".concat(this[Symbol.toStringTag], \" not supported.\"));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(_) {\n      throw new Error(\"Deleting \".concat(this[Symbol.toStringTag], \" values not supported.\"));\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      var ki, vi, ktoi, itov, k, v, i, kr, vr;\n      return _regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ki = this.keys();\n              vi = this.values();\n              ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n              itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n              i = 0;\n\n            case 5:\n              if ((kr = ki.next()).done || (vr = vi.next()).done) {\n                _context.next = 15;\n                break;\n              }\n\n              k = kr.value;\n              v = vr.value;\n              itov[i] = v;\n              ktoi.has(k) || ktoi.set(k, i);\n              _context.next = 12;\n              return [k, v];\n\n            case 12:\n              ++i;\n              _context.next = 5;\n              break;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this);\n    })\n  }, {\n    key: \"forEach\",\n    value: function forEach(callbackfn, thisArg) {\n      var ki = this.keys();\n      var vi = this.values();\n      var callback = thisArg === undefined ? callbackfn : function (v, k, m) {\n        return callbackfn.call(thisArg, v, k, m);\n      };\n      var ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n      var itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n      for (var k, v, i = 0, kr, vr; !((kr = ki.next()).done || (vr = vi.next()).done); ++i) {\n        k = kr.value;\n        v = vr.value;\n        itov[i] = v;\n        ktoi.has(k) || ktoi.set(k, i);\n        callback(v, k, this);\n      }\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return _toConsumableArray(this.values());\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = {};\n      this.forEach(function (val, key) {\n        return obj[key] = val;\n      });\n      return obj;\n    }\n  }, {\n    key: \"inspect\",\n    value: function inspect() {\n      return this.toString();\n    }\n  }, {\n    key: kCustomInspect,\n    value: function value() {\n      return this.toString();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var str = [];\n      this.forEach(function (val, key) {\n        key = valueToString(key);\n        val = valueToString(val);\n        str.push(\"\".concat(key, \": \").concat(val));\n      });\n      return \"{ \".concat(str.join(', '), \" }\");\n    }\n  }]);\n\n  return Row;\n}(Symbol.iterator);\n\nRow[Symbol.toStringTag] = function (proto) {\n  var _Object$definePropert;\n\n  Object.defineProperties(proto, (_Object$definePropert = {\n    'size': {\n      writable: true,\n      enumerable: false,\n      configurable: false,\n      value: 0\n    }\n  }, _defineProperty(_Object$definePropert, kParent, {\n    writable: true,\n    enumerable: false,\n    configurable: false,\n    value: null\n  }), _defineProperty(_Object$definePropert, kRowIndex, {\n    writable: true,\n    enumerable: false,\n    configurable: false,\n    value: -1\n  }), _Object$definePropert));\n  return proto[Symbol.toStringTag] = 'Row';\n}(Row.prototype);\n\nexport var MapRow = /*#__PURE__*/function (_Row) {\n  _inherits(MapRow, _Row);\n\n  var _super = _createSuper(MapRow);\n\n  function MapRow(slice) {\n    var _this;\n\n    _classCallCheck(this, MapRow);\n\n    _this = _super.call(this, slice, slice.length);\n    return _possibleConstructorReturn(_this, createRowProxy(_assertThisInitialized(_this)));\n  }\n\n  _createClass(MapRow, [{\n    key: \"keys\",\n    value: function keys() {\n      return this[kParent].getChildAt(0)[Symbol.iterator]();\n    }\n  }, {\n    key: \"values\",\n    value: function values() {\n      return this[kParent].getChildAt(1)[Symbol.iterator]();\n    }\n  }, {\n    key: \"getKey\",\n    value: function getKey(idx) {\n      return this[kParent].getChildAt(0).get(idx);\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(key) {\n      return this[kParent].getChildAt(0).indexOf(key);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(index) {\n      return this[kParent].getChildAt(1).get(index);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      this[kParent].getChildAt(1).set(index, value);\n    }\n  }]);\n\n  return MapRow;\n}(Row);\nexport var StructRow = /*#__PURE__*/function (_Row2) {\n  _inherits(StructRow, _Row2);\n\n  var _super2 = _createSuper(StructRow);\n\n  function StructRow(parent) {\n    var _this2;\n\n    _classCallCheck(this, StructRow);\n\n    _this2 = _super2.call(this, parent, parent.type.children.length);\n    return _possibleConstructorReturn(_this2, defineRowProxyProperties(_assertThisInitialized(_this2)));\n  }\n\n  _createClass(StructRow, [{\n    key: \"keys\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function keys() {\n      var _iterator, _step, field;\n\n      return _regeneratorRuntime.wrap(function keys$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelper(this[kParent].type.children);\n              _context2.prev = 1;\n\n              _iterator.s();\n\n            case 3:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 9;\n                break;\n              }\n\n              field = _step.value;\n              _context2.next = 7;\n              return field.name;\n\n            case 7:\n              _context2.next = 3;\n              break;\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _iterator.e(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n\n              _iterator.f();\n\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, keys, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function values() {\n      var _iterator2, _step2, field;\n\n      return _regeneratorRuntime.wrap(function values$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper(this[kParent].type.children);\n              _context3.prev = 1;\n\n              _iterator2.s();\n\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context3.next = 9;\n                break;\n              }\n\n              field = _step2.value;\n              _context3.next = 7;\n              return this[field.name];\n\n            case 7:\n              _context3.next = 3;\n              break;\n\n            case 9:\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n\n              _iterator2.e(_context3.t0);\n\n            case 14:\n              _context3.prev = 14;\n\n              _iterator2.f();\n\n              return _context3.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, values, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"getKey\",\n    value: function getKey(idx) {\n      return this[kParent].type.children[idx].name;\n    }\n  }, {\n    key: \"getIndex\",\n    value: function getIndex(key) {\n      return this[kParent].type.children.findIndex(function (f) {\n        return f.name === key;\n      });\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(index) {\n      return this[kParent].getChildAt(index).get(this[kRowIndex]);\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(index, value) {\n      return this[kParent].getChildAt(index).set(this[kRowIndex], value);\n    }\n  }]);\n\n  return StructRow;\n}(Row);\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n/** @ignore */\n\nvar defineRowProxyProperties = function () {\n  var desc = {\n    enumerable: true,\n    configurable: false,\n    get: null,\n    set: null\n  };\n  return function (row) {\n    var idx = -1,\n        ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n\n    var getter = function getter(key) {\n      return function () {\n        return this.get(key);\n      };\n    };\n\n    var setter = function setter(key) {\n      return function (val) {\n        return this.set(key, val);\n      };\n    };\n\n    var _iterator3 = _createForOfIteratorHelper(row.keys()),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var key = _step3.value;\n        ktoi.set(key, ++idx);\n        desc.get = getter(key);\n        desc.set = setter(key);\n        row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n        row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    desc.get = desc.set = null;\n    return row;\n  };\n}();\n/** @ignore */\n\n\nvar createRowProxy = function () {\n  if (typeof Proxy === 'undefined') {\n    return defineRowProxyProperties;\n  }\n\n  var has = Row.prototype.has;\n  var _get = Row.prototype.get;\n  var _set = Row.prototype.set;\n  var getKey = Row.prototype.getKey;\n  var RowProxyHandler = {\n    isExtensible: function isExtensible() {\n      return false;\n    },\n    deleteProperty: function deleteProperty() {\n      return false;\n    },\n    preventExtensions: function preventExtensions() {\n      return true;\n    },\n    ownKeys: function ownKeys(row) {\n      return _toConsumableArray(row.keys()).map(function (x) {\n        return \"\".concat(x);\n      });\n    },\n    has: function has(row, key) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return true;\n      }\n\n      if (typeof key === 'number' && !row.has(key)) {\n        key = row.getKey(key);\n      }\n\n      return row.has(key);\n    },\n    get: function get(row, key, receiver) {\n      switch (key) {\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n        case kCustomInspect:\n          return Reflect.get(row, key, receiver);\n      }\n\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n\n      return _get.call(receiver, key);\n    },\n    set: function set(row, key, val, receiver) {\n      switch (key) {\n        case kParent:\n        case kRowIndex:\n        case kIdxToVal:\n        case kKeyToIdx:\n          return Reflect.set(row, key, val, receiver);\n\n        case 'getKey':\n        case 'getIndex':\n        case 'getValue':\n        case 'setValue':\n        case 'toArray':\n        case 'toJSON':\n        case 'inspect':\n        case 'constructor':\n        case 'isPrototypeOf':\n        case 'propertyIsEnumerable':\n        case 'toString':\n        case 'toLocaleString':\n        case 'valueOf':\n        case 'size':\n        case 'has':\n        case 'get':\n        case 'set':\n        case 'clear':\n        case 'delete':\n        case 'keys':\n        case 'values':\n        case 'entries':\n        case 'forEach':\n        case '__proto__':\n        case '__defineGetter__':\n        case '__defineSetter__':\n        case 'hasOwnProperty':\n        case '__lookupGetter__':\n        case '__lookupSetter__':\n        case Symbol.iterator:\n        case Symbol.toStringTag:\n          return false;\n      }\n\n      if (typeof key === 'number' && !has.call(receiver, key)) {\n        key = getKey.call(receiver, key);\n      }\n\n      return has.call(receiver, key) ? !!_set.call(receiver, key, val) : false;\n    }\n  };\n  return function (row) {\n    return new Proxy(row, RowProxyHandler);\n  };\n}();","map":{"version":3,"mappings":"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","names":["valueToString","kParent","Symbol","for","kRowIndex","kKeyToIdx","kIdxToVal","kCustomInspect","Row","parent","numKeys","size","iterator","key","get","undefined","val","ktoi","Map","idx","itov","Array","getValue","getIndex","set","setValue","Error","toStringTag","_","ki","keys","vi","values","i","kr","next","done","vr","k","value","v","has","callbackfn","thisArg","callback","m","call","obj","forEach","toString","str","push","join","proto","Object","defineProperties","writable","enumerable","configurable","prototype","MapRow","slice","length","createRowProxy","getChildAt","indexOf","index","StructRow","type","children","defineRowProxyProperties","field","name","findIndex","f","setPrototypeOf","desc","row","getter","setter","hasOwnProperty","defineProperty","Proxy","getKey","RowProxyHandler","isExtensible","deleteProperty","preventExtensions","ownKeys","map","x","receiver","Reflect"],"sources":["vector/row.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { StructVector } from './struct';\nimport { valueToString } from '../util/pretty';\nimport { DataType, Struct, RowLike } from '../type';\n\n/** @ignore */ const kParent = Symbol.for('parent');\n/** @ignore */ const kRowIndex = Symbol.for('rowIndex');\n/** @ignore */ const kKeyToIdx = Symbol.for('keyToIdx');\n/** @ignore */ const kIdxToVal = Symbol.for('idxToVal');\n/** @ignore */ const kCustomInspect = Symbol.for('nodejs.util.inspect.custom');\n\nabstract class Row<K extends PropertyKey = any, V = any> implements Map<K, V> {\n\n    public readonly size: number;\n    public readonly [Symbol.toStringTag]: string;\n\n    protected [kRowIndex]: number;\n    protected [kParent]: Vector<Struct>;\n    protected [kKeyToIdx]: Map<K, number>;\n    protected [kIdxToVal]: V[];\n\n    constructor(parent: Vector<Struct>, numKeys: number) {\n        this[kParent] = parent;\n        this.size = numKeys;\n    }\n\n    public abstract keys(): IterableIterator<K>;\n    public abstract values(): IterableIterator<V>;\n    public abstract getKey(idx: number): K;\n    public abstract getIndex(key: K): number;\n    public abstract getValue(idx: number): V;\n    public abstract setValue(idx: number, val: V): void;\n\n    public entries() { return this[Symbol.iterator](); }\n\n    public has(key: K) { return this.get(key) !== undefined; }\n\n    public get(key: K) {\n        let val = undefined;\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx !== undefined) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            } else if ((idx = this.getIndex(key)) > -1) {\n                ktoi.set(key, idx);\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                ((val = itov[idx]) !== undefined) || (itov[idx] = val = this.getValue(idx));\n            }\n        }\n        return val;\n    }\n\n    public set(key: K, val: V) {\n        if (key !== null && key !== undefined) {\n            const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n            let idx = ktoi.get(key);\n            if (idx === undefined) {\n                ktoi.set(key, idx = this.getIndex(key));\n            }\n            if (idx > -1) {\n                const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n                itov[idx] = <any> this.setValue(idx, val);\n            }\n        }\n        return this;\n    }\n\n    public clear(): void { throw new Error(`Clearing ${this[Symbol.toStringTag]} not supported.`); }\n\n    public delete(_: K): boolean { throw new Error(`Deleting ${this[Symbol.toStringTag]} values not supported.`); }\n\n    public *[Symbol.iterator](): IterableIterator<[K, V]> {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            yield [k, v];\n        }\n    }\n\n    public forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\n        const ki = this.keys();\n        const vi = this.values();\n        const callback = thisArg === undefined ? callbackfn :\n            (v: V, k: K, m: Map<K, V>) => callbackfn.call(thisArg, v, k, m);\n        const ktoi = this[kKeyToIdx] || (this[kKeyToIdx] = new Map());\n        const itov = this[kIdxToVal] || (this[kIdxToVal] = new Array(this.size));\n\n        for (let k: K, v: V, i = 0, kr: IteratorResult<K>, vr: IteratorResult<V>;\n            !((kr = ki.next()).done || (vr = vi.next()).done);\n            ++i\n        ) {\n            k = kr.value;\n            v = vr.value;\n            itov[i] = v;\n            ktoi.has(k) || ktoi.set(k, i);\n            callback(v, k, this);\n        }\n    }\n\n    public toArray() { return [...this.values()]; }\n    public toJSON() {\n        const obj = {} as any;\n        this.forEach((val, key) => obj[key] = val);\n        return obj;\n    }\n\n    public inspect() { return this.toString(); }\n    public [kCustomInspect]() { return this.toString(); }\n    public toString() {\n        const str: string[] = [];\n        this.forEach((val, key) => {\n            key = valueToString(key);\n            val = valueToString(val);\n            str.push(`${key}: ${val}`);\n        });\n        return `{ ${str.join(', ')} }`;\n    }\n\n    protected static [Symbol.toStringTag] = ((proto: Row) => {\n        Object.defineProperties(proto, {\n            'size': { writable: true, enumerable: false, configurable: false, value: 0 },\n            [kParent]: { writable: true, enumerable: false, configurable: false, value: null },\n            [kRowIndex]: { writable: true, enumerable: false, configurable: false, value: -1 },\n        });\n        return (proto as any)[Symbol.toStringTag] = 'Row';\n    })(Row.prototype);\n}\n\nexport class MapRow<K extends DataType = any, V extends DataType = any> extends Row<K['TValue'], V['TValue'] | null> {\n    constructor(slice: Vector<Struct<{ key: K, value: V }>>) {\n        super(slice, slice.length);\n        return createRowProxy(this);\n    }\n    public keys() {\n        return this[kParent].getChildAt(0)![Symbol.iterator]();\n    }\n    public values() {\n        return this[kParent].getChildAt(1)![Symbol.iterator]();\n    }\n    public getKey(idx: number): K['TValue'] {\n        return this[kParent].getChildAt(0)!.get(idx);\n    }\n    public getIndex(key: K['TValue']): number {\n        return this[kParent].getChildAt(0)!.indexOf(key);\n    }\n    public getValue(index: number): V['TValue'] | null {\n        return this[kParent].getChildAt(1)!.get(index);\n    }\n    public setValue(index: number, value: V['TValue'] | null): void {\n        this[kParent].getChildAt(1)!.set(index, value);\n    }\n}\n\nexport class StructRow<T extends { [key: string]: DataType } = any> extends Row<keyof T, T[keyof T]['TValue'] | null> {\n    constructor(parent: StructVector<T>) {\n        super(parent, parent.type.children.length);\n        return defineRowProxyProperties(this);\n    }\n    public *keys() {\n        for (const field of this[kParent].type.children) {\n            yield field.name as keyof T;\n        }\n    }\n    public *values() {\n        for (const field of this[kParent].type.children) {\n            yield (this as RowLike<T>)[field.name];\n        }\n    }\n    public getKey(idx: number): keyof T {\n        return this[kParent].type.children[idx].name as keyof T;\n    }\n    public getIndex(key: keyof T): number {\n        return this[kParent].type.children.findIndex((f) => f.name === key);\n    }\n    public getValue(index: number): T[keyof T]['TValue'] | null {\n        return this[kParent].getChildAt(index)!.get(this[kRowIndex]);\n    }\n    public setValue(index: number, value: T[keyof T]['TValue'] | null): void {\n        return this[kParent].getChildAt(index)!.set(this[kRowIndex], value);\n    }\n}\n\nObject.setPrototypeOf(Row.prototype, Map.prototype);\n\n/** @ignore */\nconst defineRowProxyProperties = (() => {\n    const desc = { enumerable: true, configurable: false, get: null as any, set: null as any };\n    return <T extends Row>(row: T) => {\n        let idx = -1, ktoi = row[kKeyToIdx] || (row[kKeyToIdx] = new Map());\n        const getter = (key: any) => function(this: T) { return this.get(key); };\n        const setter = (key: any) => function(this: T, val: any) { return this.set(key, val); };\n        for (const key of row.keys()) {\n            ktoi.set(key, ++idx);\n            desc.get = getter(key);\n            desc.set = setter(key);\n            row.hasOwnProperty(key) || (desc.enumerable = true, Object.defineProperty(row, key, desc));\n            row.hasOwnProperty(idx) || (desc.enumerable = false, Object.defineProperty(row, idx, desc));\n        }\n        desc.get = desc.set = null;\n        return row;\n    };\n})();\n\n/** @ignore */\nconst createRowProxy = (() => {\n    if (typeof Proxy === 'undefined') {\n        return defineRowProxyProperties;\n    }\n    const has = Row.prototype.has;\n    const get = Row.prototype.get;\n    const set = Row.prototype.set;\n    const getKey = Row.prototype.getKey;\n    const RowProxyHandler: ProxyHandler<Row> = {\n        isExtensible() { return false; },\n        deleteProperty() { return false; },\n        preventExtensions() { return true; },\n        ownKeys(row: Row) { return [...row.keys()].map((x) => `${x}`); },\n        has(row: Row, key: PropertyKey) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return true;\n            }\n            if (typeof key === 'number' && !row.has(key)) {\n                key = row.getKey(key);\n            }\n            return row.has(key);\n        },\n        get(row: Row, key: PropertyKey, receiver: any) {\n            switch (key) {\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag: case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx: case kCustomInspect:\n                    return Reflect.get(row, key, receiver);\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return get.call(receiver, key);\n        },\n        set(row: Row, key: PropertyKey, val: any, receiver: any) {\n            switch (key) {\n                case kParent: case kRowIndex: case kIdxToVal: case kKeyToIdx:\n                    return Reflect.set(row, key, val, receiver);\n                case 'getKey': case 'getIndex': case 'getValue': case 'setValue': case 'toArray': case 'toJSON': case 'inspect':\n                case 'constructor': case 'isPrototypeOf': case 'propertyIsEnumerable': case 'toString': case 'toLocaleString': case 'valueOf':\n                case 'size': case 'has': case 'get': case 'set': case 'clear': case 'delete': case 'keys': case 'values': case 'entries': case 'forEach':\n                case '__proto__': case '__defineGetter__': case '__defineSetter__': case 'hasOwnProperty': case '__lookupGetter__': case '__lookupSetter__':\n                case Symbol.iterator: case Symbol.toStringTag:\n                    return false;\n            }\n            if (typeof key === 'number' && !has.call(receiver, key)) {\n                key = getKey.call(receiver, key);\n            }\n            return has.call(receiver, key) ? !!set.call(receiver, key, val) : false;\n        },\n    };\n    return <T extends Row>(row: T) => new Proxy(row, RowProxyHandler) as T;\n})();\n"]},"metadata":{},"sourceType":"module"}