{"ast":null,"code":"import _classCallCheck from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { MapRow } from './row';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { List } from '../type';\n/** @ignore */\n\nexport var MapVector = /*#__PURE__*/function (_BaseVector) {\n  _inherits(MapVector, _BaseVector);\n\n  var _super = _createSuper(MapVector);\n\n  function MapVector() {\n    _classCallCheck(this, MapVector);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MapVector, [{\n    key: \"asList\",\n    value: function asList() {\n      var child = this.type.children[0];\n      return Vector.new(this.data.clone(new List(child)));\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(index) {\n      var child = this.getChildAt(0);\n      var _this$valueOffsets = this.valueOffsets,\n          begin = _this$valueOffsets[index],\n          end = _this$valueOffsets[index + 1];\n      return new MapRow(child.slice(begin, end));\n    }\n  }]);\n\n  return MapVector;\n}(BaseVector);","map":{"version":3,"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,QAAuB,OAAvB;AAEA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAAiCC,IAAjC,QAA6C,SAA7C;AAEA;;AACA,WAAaC,SAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,WACW,kBAAM;AACT,UAAMC,KAAK,GAAG,KAAKC,IAAL,CAAUC,QAAV,CAAmB,CAAnB,CAAd;AACA,aAAON,MAAM,CAACO,GAAP,CAAW,KAAKC,IAAL,CAAUC,KAAV,CAAgB,IAAIP,IAAJ,CAAuCE,KAAvC,CAAhB,CAAX,CAAP;AACH;AAJL;AAAA;AAAA,WAKW,cAAKM,KAAL,EAAkB;AACrB,UAAMN,KAAK,GAAG,KAAKO,UAAL,CAA8C,CAA9C,CAAd;AACA,+BAA6C,KAAKC,YAAlD;AAAA,UAAiBC,KAAjB,sBAASH,KAAT;AAAA,UAAqCI,GAArC,sBAAyBJ,KAAK,GAAG,CAAjC;AACA,aAAO,IAAIX,MAAJ,CAAWK,KAAM,CAACW,KAAP,CAAaF,KAAb,EAAoBC,GAApB,CAAX,CAAP;AACH;AATL;;AAAA;AAAA,EAAmFb,UAAnF","names":["MapRow","Vector","BaseVector","List","MapVector","child","type","children","new","data","clone","index","getChildAt","valueOffsets","begin","end","slice"],"sources":["vector/map.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { MapRow } from './row';\nimport { Field } from '../schema';\nimport { Vector } from '../vector';\nimport { BaseVector } from './base';\nimport { DataType, Map_, Struct, List } from '../type';\n\n/** @ignore */\nexport class MapVector<K extends DataType = any, V extends DataType = any> extends BaseVector<Map_<K, V>> {\n    public asList() {\n        const child = this.type.children[0] as Field<Struct<{ key: K, value: V }>>;\n        return Vector.new(this.data.clone(new List<Struct<{ key: K, value: V }>>(child)));\n    }\n    public bind(index: number): Map_<K, V>['TValue'] {\n        const child = this.getChildAt<Struct<{ key: K, value: V }>>(0);\n        const { [index]: begin, [index + 1]: end } = this.valueOffsets;\n        return new MapRow(child!.slice(begin, end));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}