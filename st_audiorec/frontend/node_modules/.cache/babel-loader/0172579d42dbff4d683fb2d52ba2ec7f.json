{"ast":null,"code":"// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n/** @ignore */\n\nexport function clampIndex(source, index, then) {\n  var length = source.length;\n  var adjust = index > -1 ? index : length + index % length;\n  return then ? then(source, adjust) : adjust;\n}\n/** @ignore */\n\nvar tmp;\n/** @ignore */\n\nexport function clampRange(source, begin, end, then) {\n  // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n  // clamp between 0 and length, and wrap around on negative indices, e.g.\n  // slice(-1, 5) or slice(5, -1)\n  var _source$length = source.length,\n      len = _source$length === void 0 ? 0 : _source$length;\n  var lhs = typeof begin !== 'number' ? 0 : begin;\n  var rhs = typeof end !== 'number' ? len : end; // wrap around on negative start/end positions\n\n  lhs < 0 && (lhs = (lhs % len + len) % len);\n  rhs < 0 && (rhs = (rhs % len + len) % len); // ensure lhs <= rhs\n\n  rhs < lhs && (tmp = lhs, lhs = rhs, rhs = tmp); // ensure rhs <= length\n\n  rhs > len && (rhs = len);\n  return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\nvar big0 = BigIntAvailable ? BigInt(0) : 0;\n\nvar isNaNFast = function isNaNFast(value) {\n  return value !== value;\n};\n/** @ignore */\n\n\nexport function createElementComparator(search) {\n  var typeofSearch = typeof search; // Compare primitives\n\n  if (typeofSearch !== 'object' || search === null) {\n    // Compare NaN\n    if (isNaNFast(search)) {\n      return isNaNFast;\n    }\n\n    return typeofSearch !== 'bigint' ? function (value) {\n      return value === search;\n    } : function (value) {\n      return big0 + value === search;\n    };\n  } // Compare Dates\n\n\n  if (search instanceof Date) {\n    var valueOfSearch = search.valueOf();\n    return function (value) {\n      return value instanceof Date ? value.valueOf() === valueOfSearch : false;\n    };\n  } // Compare TypedArrays\n\n\n  if (ArrayBuffer.isView(search)) {\n    return function (value) {\n      return value ? compareArrayLike(search, value) : false;\n    };\n  } // Compare Maps and Rows\n\n\n  if (search instanceof Map) {\n    return creatMapComparator(search);\n  } // Compare Array-likes\n\n\n  if (Array.isArray(search)) {\n    return createArrayLikeComparator(search);\n  } // Compare Vectors\n\n\n  if (search instanceof Vector) {\n    return createVectorComparator(search);\n  } // Compare non-empty Objects\n\n\n  return createObjectComparator(search);\n}\n/** @ignore */\n\nfunction createArrayLikeComparator(lhs) {\n  var comparators = [];\n\n  for (var i = -1, n = lhs.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs[i]);\n  }\n\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\n\n\nfunction creatMapComparator(lhs) {\n  var i = -1;\n  var comparators = [];\n  lhs.forEach(function (v) {\n    return comparators[++i] = createElementComparator(v);\n  });\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\n\n\nfunction createVectorComparator(lhs) {\n  var comparators = [];\n\n  for (var i = -1, n = lhs.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs.get(i));\n  }\n\n  return createSubElementsComparator(comparators);\n}\n/** @ignore */\n\n\nfunction createObjectComparator(lhs) {\n  var keys = Object.keys(lhs); // Only compare non-empty Objects\n\n  if (keys.length === 0) {\n    return function () {\n      return false;\n    };\n  }\n\n  var comparators = [];\n\n  for (var i = -1, n = keys.length; ++i < n;) {\n    comparators[i] = createElementComparator(lhs[keys[i]]);\n  }\n\n  return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators, keys) {\n  return function (rhs) {\n    if (!rhs || typeof rhs !== 'object') {\n      return false;\n    }\n\n    switch (rhs.constructor) {\n      case Array:\n        return compareArray(comparators, rhs);\n\n      case Map:\n      case MapRow:\n      case StructRow:\n        return compareObject(comparators, rhs, rhs.keys());\n\n      case Object:\n      case undefined:\n        // support `Object.create(null)` objects\n        return compareObject(comparators, rhs, keys || Object.keys(rhs));\n    }\n\n    return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n  };\n}\n\nfunction compareArray(comparators, arr) {\n  var n = comparators.length;\n\n  if (arr.length !== n) {\n    return false;\n  }\n\n  for (var i = -1; ++i < n;) {\n    if (!comparators[i](arr[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction compareVector(comparators, vec) {\n  var n = comparators.length;\n\n  if (vec.length !== n) {\n    return false;\n  }\n\n  for (var i = -1; ++i < n;) {\n    if (!comparators[i](vec.get(i))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction compareObject(comparators, obj, keys) {\n  var lKeyItr = keys[Symbol.iterator]();\n  var rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n  var rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n  var i = 0;\n  var n = comparators.length;\n  var rVal = rValItr.next();\n  var lKey = lKeyItr.next();\n  var rKey = rKeyItr.next();\n\n  for (; i < n && !lKey.done && !rKey.done && !rVal.done; ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n    if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n      break;\n    }\n  }\n\n  if (i === n && lKey.done && rKey.done && rVal.done) {\n    return true;\n  }\n\n  lKeyItr.return && lKeyItr.return();\n  rKeyItr.return && rKeyItr.return();\n  rValItr.return && rValItr.return();\n  return false;\n}","map":{"version":3,"mappings":"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","names":["Vector","MapRow","StructRow","compareArrayLike","BigInt","BigIntAvailable","clampIndex","source","index","then","length","adjust","tmp","clampRange","begin","end","len","lhs","rhs","big0","isNaNFast","value","createElementComparator","search","typeofSearch","Date","valueOfSearch","valueOf","ArrayBuffer","isView","Map","creatMapComparator","Array","isArray","createArrayLikeComparator","createVectorComparator","createObjectComparator","comparators","i","n","createSubElementsComparator","forEach","v","get","keys","Object","constructor","compareArray","compareObject","undefined","compareVector","arr","vec","obj","lKeyItr","Symbol","iterator","rKeyItr","rValItr","values","rVal","next","lKey","rKey","done","return"],"sources":["util/vector.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Vector } from '../vector';\nimport { MapRow, StructRow } from '../vector/row';\nimport { compareArrayLike } from '../util/buffer';\nimport { BigInt, BigIntAvailable } from './compat';\n\n/** @ignore */\ntype RangeLike = { length: number; stride?: number };\n/** @ignore */\ntype ClampThen<T extends RangeLike> = (source: T, index: number) => any;\n/** @ignore */\ntype ClampRangeThen<T extends RangeLike> = (source: T, offset: number, length: number) => any;\n\nexport function clampIndex<T extends RangeLike>(source: T, index: number): number;\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampIndex<T extends RangeLike, N extends ClampThen<T> = ClampThen<T>>(source: T, index: number, then?: N) {\n    const length = source.length;\n    const adjust = index > -1 ? index : (length + (index % length));\n    return then ? then(source, adjust) : adjust;\n}\n\n/** @ignore */\nlet tmp: number;\nexport function clampRange<T extends RangeLike>(source: T, begin: number | undefined, end: number | undefined): [number, number];\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then: N): ReturnType<N>;\n/** @ignore */\nexport function clampRange<T extends RangeLike, N extends ClampRangeThen<T> = ClampRangeThen<T>>(source: T, begin: number | undefined, end: number | undefined, then?: N) {\n\n    // Adjust args similar to Array.prototype.slice. Normalize begin/end to\n    // clamp between 0 and length, and wrap around on negative indices, e.g.\n    // slice(-1, 5) or slice(5, -1)\n    let { length: len = 0 } = source;\n    let lhs = typeof begin !== 'number' ? 0 : begin;\n    let rhs = typeof end !== 'number' ? len : end;\n    // wrap around on negative start/end positions\n    (lhs < 0) && (lhs = ((lhs % len) + len) % len);\n    (rhs < 0) && (rhs = ((rhs % len) + len) % len);\n    // ensure lhs <= rhs\n    (rhs < lhs) && (tmp = lhs, lhs = rhs, rhs = tmp);\n     // ensure rhs <= length\n    (rhs > len) && (rhs = len);\n\n    return then ? then(source, lhs, rhs) : [lhs, rhs];\n}\n\nconst big0 = BigIntAvailable ? BigInt(0) : 0;\nconst isNaNFast = (value: any) => value !== value;\n\n/** @ignore */\nexport function createElementComparator(search: any) {\n    let typeofSearch = typeof search;\n    // Compare primitives\n    if (typeofSearch !== 'object' || search === null) {\n        // Compare NaN\n        if (isNaNFast(search)) {\n            return isNaNFast;\n        }\n        return typeofSearch !== 'bigint'\n            ? (value: any) => value === search\n            : (value: any) => (big0 + value) === search;\n    }\n    // Compare Dates\n    if (search instanceof Date) {\n        const valueOfSearch = search.valueOf();\n        return (value: any) => value instanceof Date ? (value.valueOf() === valueOfSearch) : false;\n    }\n    // Compare TypedArrays\n    if (ArrayBuffer.isView(search)) {\n        return (value: any) => value ? compareArrayLike(search, value) : false;\n    }\n    // Compare Maps and Rows\n    if (search instanceof Map) { return creatMapComparator(search); }\n    // Compare Array-likes\n    if (Array.isArray(search)) { return createArrayLikeComparator(search); }\n    // Compare Vectors\n    if (search instanceof Vector) { return createVectorComparator(search); }\n    // Compare non-empty Objects\n    return createObjectComparator(search);\n}\n\n/** @ignore */\nfunction createArrayLikeComparator(lhs: ArrayLike<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[i]);\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction creatMapComparator(lhs: Map<any, any>) {\n    let i = -1;\n    const comparators = [] as ((x: any) => boolean)[];\n    lhs.forEach((v) => comparators[++i] = createElementComparator(v));\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createVectorComparator(lhs: Vector<any>) {\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = lhs.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs.get(i));\n    }\n    return createSubElementsComparator(comparators);\n}\n\n/** @ignore */\nfunction createObjectComparator(lhs: any) {\n    const keys = Object.keys(lhs);\n    // Only compare non-empty Objects\n    if (keys.length === 0) { return () => false; }\n    const comparators = [] as ((x: any) => boolean)[];\n    for (let i = -1, n = keys.length; ++i < n;) {\n        comparators[i] = createElementComparator(lhs[keys[i]]);\n    }\n    return createSubElementsComparator(comparators, keys);\n}\n\nfunction createSubElementsComparator(comparators: ((x: any) => boolean)[], keys?: Iterable<string>) {\n    return (rhs: any) => {\n        if (!rhs || typeof rhs !== 'object') {\n            return false;\n        }\n        switch (rhs.constructor) {\n            case Array: return compareArray(comparators, rhs);\n            case Map:\n            case MapRow:\n            case StructRow:\n                return compareObject(comparators, rhs, rhs.keys());\n            case Object:\n            case undefined: // support `Object.create(null)` objects\n                return compareObject(comparators, rhs, keys || Object.keys(rhs));\n        }\n        return rhs instanceof Vector ? compareVector(comparators, rhs) : false;\n    };\n}\n\nfunction compareArray(comparators: ((x: any) => boolean)[], arr: any[]) {\n    const n = comparators.length;\n    if (arr.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](arr[i]))) { return false; }\n    }\n    return true;\n}\n\nfunction compareVector(comparators: ((x: any) => boolean)[], vec: Vector) {\n    const n = comparators.length;\n    if (vec.length !== n) { return false; }\n    for (let i = -1; ++i < n;) {\n        if (!(comparators[i](vec.get(i)))) { return false; }\n    }\n    return true;\n}\n\nfunction compareObject(comparators: ((x: any) => boolean)[], obj: Map<any, any>, keys: Iterable<string>) {\n\n    const lKeyItr = keys[Symbol.iterator]();\n    const rKeyItr = obj instanceof Map ? obj.keys() : Object.keys(obj)[Symbol.iterator]();\n    const rValItr = obj instanceof Map ? obj.values() : Object.values(obj)[Symbol.iterator]();\n\n    let i = 0;\n    let n = comparators.length;\n    let rVal = rValItr.next();\n    let lKey = lKeyItr.next();\n    let rKey = rKeyItr.next();\n\n    for (; i < n && !lKey.done && !rKey.done && !rVal.done;\n         ++i, lKey = lKeyItr.next(), rKey = rKeyItr.next(), rVal = rValItr.next()) {\n        if (lKey.value !== rKey.value || !comparators[i](rVal.value)) {\n            break;\n        }\n    }\n    if (i === n && lKey.done && rKey.done && rVal.done) {\n        return true;\n    }\n    lKeyItr.return && lKeyItr.return();\n    rKeyItr.return && rKeyItr.return();\n    rValItr.return && rValItr.return();\n    return false;\n}\n"]},"metadata":{},"sourceType":"module"}