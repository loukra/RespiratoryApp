{"ast":null,"code":"/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\n\nvar ArrowTable =\n/** @class */\nfunction () {\n  function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n    var _this = this;\n\n    this.getCell = function (rowIndex, columnIndex) {\n      var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n      var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n      var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n\n      if (isBlankCell) {\n        var classNames = [\"blank\"];\n\n        if (columnIndex > 0) {\n          classNames.push(\"level\" + rowIndex);\n        }\n\n        return {\n          type: \"blank\",\n          classNames: classNames.join(\" \"),\n          content: \"\"\n        };\n      } else if (isColumnsCell) {\n        var dataColumnIndex = columnIndex - _this.headerColumns;\n        var classNames = [\"col_heading\", \"level\" + rowIndex, \"col\" + dataColumnIndex];\n        return {\n          type: \"columns\",\n          classNames: classNames.join(\" \"),\n          content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n        };\n      } else if (isIndexCell) {\n        var dataRowIndex = rowIndex - _this.headerRows;\n        var classNames = [\"row_heading\", \"level\" + columnIndex, \"row\" + dataRowIndex];\n        return {\n          type: \"index\",\n          id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n          classNames: classNames.join(\" \"),\n          content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n        };\n      } else {\n        var dataRowIndex = rowIndex - _this.headerRows;\n        var dataColumnIndex = columnIndex - _this.headerColumns;\n        var classNames = [\"data\", \"row\" + dataRowIndex, \"col\" + dataColumnIndex];\n        var content = _this.styler ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex) : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n        return {\n          type: \"data\",\n          id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n          classNames: classNames.join(\" \"),\n          content: content\n        };\n      }\n    };\n\n    this.getContent = function (table, rowIndex, columnIndex) {\n      var column = table.getColumnAt(columnIndex);\n\n      if (column === null) {\n        return \"\";\n      }\n\n      var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n\n      switch (columnTypeId) {\n        case Type.Timestamp:\n          {\n            return _this.nanosToDate(column.get(rowIndex));\n          }\n\n        default:\n          {\n            return column.get(rowIndex);\n          }\n      }\n    };\n\n    this.dataTable = Table.from(dataBuffer);\n    this.indexTable = Table.from(indexBuffer);\n    this.columnsTable = Table.from(columnsBuffer);\n    this.styler = styler ? {\n      caption: styler.caption,\n      displayValuesTable: Table.from(styler.displayValues),\n      styles: styler.styles,\n      uuid: styler.uuid\n    } : undefined;\n  }\n\n  Object.defineProperty(ArrowTable.prototype, \"rows\", {\n    get: function get() {\n      return this.indexTable.length + this.columnsTable.numCols;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"columns\", {\n    get: function get() {\n      return this.indexTable.numCols + this.columnsTable.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n    get: function get() {\n      return this.rows - this.dataRows;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n    get: function get() {\n      return this.columns - this.dataColumns;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n    get: function get() {\n      return this.dataTable.length;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n    get: function get() {\n      return this.dataTable.numCols;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n    get: function get() {\n      return this.styler && this.styler.uuid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"caption\", {\n    get: function get() {\n      return this.styler && this.styler.caption;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"styles\", {\n    get: function get() {\n      return this.styler && this.styler.styles;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"table\", {\n    get: function get() {\n      return this.dataTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"index\", {\n    get: function get() {\n      return this.indexTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n    get: function get() {\n      return this.columnsTable;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Serialize arrow table.\n   */\n\n  ArrowTable.prototype.serialize = function () {\n    return {\n      data: this.dataTable.serialize(),\n      index: this.indexTable.serialize(),\n      columns: this.columnsTable.serialize()\n    };\n  };\n  /**\n   * Returns apache-arrow specific typeId of column.\n   */\n\n\n  ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n    return table.schema.fields[columnIndex].type.typeId;\n  };\n\n  ArrowTable.prototype.nanosToDate = function (nanos) {\n    return new Date(nanos / 1e6);\n  };\n\n  return ArrowTable;\n}();\n\nexport { ArrowTable };","map":{"version":3,"sources":["/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/streamlit-component-lib/dist/ArrowTable.js"],"names":["Table","Type","ArrowTable","dataBuffer","indexBuffer","columnsBuffer","styler","_this","getCell","rowIndex","columnIndex","isBlankCell","headerRows","headerColumns","isIndexCell","isColumnsCell","classNames","push","type","join","content","dataColumnIndex","getContent","columnsTable","dataRowIndex","id","uuid","indexTable","displayValuesTable","dataTable","table","column","getColumnAt","columnTypeId","getColumnTypeId","Timestamp","nanosToDate","get","from","caption","displayValues","styles","undefined","Object","defineProperty","prototype","length","numCols","enumerable","configurable","rows","dataRows","columns","dataColumns","serialize","data","index","schema","fields","typeId","nanos","Date"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,cAA5B;;AACA,IAAIC,UAAU;AAAG;AAAe,YAAY;AACxC,WAASA,UAAT,CAAoBC,UAApB,EAAgCC,WAAhC,EAA6CC,aAA7C,EAA4DC,MAA5D,EAAoE;AAChE,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAKC,OAAL,GAAe,UAAUC,QAAV,EAAoBC,WAApB,EAAiC;AAC5C,UAAIC,WAAW,GAAGF,QAAQ,GAAGF,KAAK,CAACK,UAAjB,IAA+BF,WAAW,GAAGH,KAAK,CAACM,aAArE;AACA,UAAIC,WAAW,GAAGL,QAAQ,IAAIF,KAAK,CAACK,UAAlB,IAAgCF,WAAW,GAAGH,KAAK,CAACM,aAAtE;AACA,UAAIE,aAAa,GAAGN,QAAQ,GAAGF,KAAK,CAACK,UAAjB,IAA+BF,WAAW,IAAIH,KAAK,CAACM,aAAxE;;AACA,UAAIF,WAAJ,EAAiB;AACb,YAAIK,UAAU,GAAG,CAAC,OAAD,CAAjB;;AACA,YAAIN,WAAW,GAAG,CAAlB,EAAqB;AACjBM,UAAAA,UAAU,CAACC,IAAX,CAAgB,UAAUR,QAA1B;AACH;;AACD,eAAO;AACHS,UAAAA,IAAI,EAAE,OADH;AAEHF,UAAAA,UAAU,EAAEA,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAFT;AAGHC,UAAAA,OAAO,EAAE;AAHN,SAAP;AAKH,OAVD,MAWK,IAAIL,aAAJ,EAAmB;AACpB,YAAIM,eAAe,GAAGX,WAAW,GAAGH,KAAK,CAACM,aAA1C;AACA,YAAIG,UAAU,GAAG,CACb,aADa,EAEb,UAAUP,QAFG,EAGb,QAAQY,eAHK,CAAjB;AAKA,eAAO;AACHH,UAAAA,IAAI,EAAE,SADH;AAEHF,UAAAA,UAAU,EAAEA,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAFT;AAGHC,UAAAA,OAAO,EAAEb,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACgB,YAAvB,EAAqCF,eAArC,EAAsDZ,QAAtD;AAHN,SAAP;AAKH,OAZI,MAaA,IAAIK,WAAJ,EAAiB;AAClB,YAAIU,YAAY,GAAGf,QAAQ,GAAGF,KAAK,CAACK,UAApC;AACA,YAAII,UAAU,GAAG,CACb,aADa,EAEb,UAAUN,WAFG,EAGb,QAAQc,YAHK,CAAjB;AAKA,eAAO;AACHN,UAAAA,IAAI,EAAE,OADH;AAEHO,UAAAA,EAAE,EAAE,OAAOlB,KAAK,CAACmB,IAAb,GAAoB,OAApB,GAA8BhB,WAA9B,GAA4C,MAA5C,GAAqDc,YAFtD;AAGHR,UAAAA,UAAU,EAAEA,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAHT;AAIHC,UAAAA,OAAO,EAAEb,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACoB,UAAvB,EAAmCH,YAAnC,EAAiDd,WAAjD;AAJN,SAAP;AAMH,OAbI,MAcA;AACD,YAAIc,YAAY,GAAGf,QAAQ,GAAGF,KAAK,CAACK,UAApC;AACA,YAAIS,eAAe,GAAGX,WAAW,GAAGH,KAAK,CAACM,aAA1C;AACA,YAAIG,UAAU,GAAG,CACb,MADa,EAEb,QAAQQ,YAFK,EAGb,QAAQH,eAHK,CAAjB;AAKA,YAAID,OAAO,GAAGb,KAAK,CAACD,MAAN,GACRC,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACD,MAAN,CAAasB,kBAA9B,EAAkDJ,YAAlD,EAAgEH,eAAhE,CADQ,GAERd,KAAK,CAACe,UAAN,CAAiBf,KAAK,CAACsB,SAAvB,EAAkCL,YAAlC,EAAgDH,eAAhD,CAFN;AAGA,eAAO;AACHH,UAAAA,IAAI,EAAE,MADH;AAEHO,UAAAA,EAAE,EAAE,OAAOlB,KAAK,CAACmB,IAAb,GAAoB,KAApB,GAA4BF,YAA5B,GAA2C,MAA3C,GAAoDH,eAFrD;AAGHL,UAAAA,UAAU,EAAEA,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAHT;AAIHC,UAAAA,OAAO,EAAEA;AAJN,SAAP;AAMH;AACJ,KA5DD;;AA6DA,SAAKE,UAAL,GAAkB,UAAUQ,KAAV,EAAiBrB,QAAjB,EAA2BC,WAA3B,EAAwC;AACtD,UAAIqB,MAAM,GAAGD,KAAK,CAACE,WAAN,CAAkBtB,WAAlB,CAAb;;AACA,UAAIqB,MAAM,KAAK,IAAf,EAAqB;AACjB,eAAO,EAAP;AACH;;AACD,UAAIE,YAAY,GAAG1B,KAAK,CAAC2B,eAAN,CAAsBJ,KAAtB,EAA6BpB,WAA7B,CAAnB;;AACA,cAAQuB,YAAR;AACI,aAAKhC,IAAI,CAACkC,SAAV;AAAqB;AACjB,mBAAO5B,KAAK,CAAC6B,WAAN,CAAkBL,MAAM,CAACM,GAAP,CAAW5B,QAAX,CAAlB,CAAP;AACH;;AACD;AAAS;AACL,mBAAOsB,MAAM,CAACM,GAAP,CAAW5B,QAAX,CAAP;AACH;AANL;AAQH,KAdD;;AAeA,SAAKoB,SAAL,GAAiB7B,KAAK,CAACsC,IAAN,CAAWnC,UAAX,CAAjB;AACA,SAAKwB,UAAL,GAAkB3B,KAAK,CAACsC,IAAN,CAAWlC,WAAX,CAAlB;AACA,SAAKmB,YAAL,GAAoBvB,KAAK,CAACsC,IAAN,CAAWjC,aAAX,CAApB;AACA,SAAKC,MAAL,GAAcA,MAAM,GACd;AACEiC,MAAAA,OAAO,EAAEjC,MAAM,CAACiC,OADlB;AAEEX,MAAAA,kBAAkB,EAAE5B,KAAK,CAACsC,IAAN,CAAWhC,MAAM,CAACkC,aAAlB,CAFtB;AAGEC,MAAAA,MAAM,EAAEnC,MAAM,CAACmC,MAHjB;AAIEf,MAAAA,IAAI,EAAEpB,MAAM,CAACoB;AAJf,KADc,GAOdgB,SAPN;AAQH;;AACDC,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,MAA5C,EAAoD;AAChDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKV,UAAL,CAAgBmB,MAAhB,GAAyB,KAAKvB,YAAL,CAAkBwB,OAAlD;AACH,KAH+C;AAIhDC,IAAAA,UAAU,EAAE,IAJoC;AAKhDC,IAAAA,YAAY,EAAE;AALkC,GAApD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,SAA5C,EAAuD;AACnDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKV,UAAL,CAAgBoB,OAAhB,GAA0B,KAAKxB,YAAL,CAAkBuB,MAAnD;AACH,KAHkD;AAInDE,IAAAA,UAAU,EAAE,IAJuC;AAKnDC,IAAAA,YAAY,EAAE;AALqC,GAAvD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,YAA5C,EAA0D;AACtDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKa,IAAL,GAAY,KAAKC,QAAxB;AACH,KAHqD;AAItDH,IAAAA,UAAU,EAAE,IAJ0C;AAKtDC,IAAAA,YAAY,EAAE;AALwC,GAA1D;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,eAA5C,EAA6D;AACzDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKe,OAAL,GAAe,KAAKC,WAA3B;AACH,KAHwD;AAIzDL,IAAAA,UAAU,EAAE,IAJ6C;AAKzDC,IAAAA,YAAY,EAAE;AAL2C,GAA7D;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,UAA5C,EAAwD;AACpDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKR,SAAL,CAAeiB,MAAtB;AACH,KAHmD;AAIpDE,IAAAA,UAAU,EAAE,IAJwC;AAKpDC,IAAAA,YAAY,EAAE;AALsC,GAAxD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,aAA5C,EAA2D;AACvDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKR,SAAL,CAAekB,OAAtB;AACH,KAHsD;AAIvDC,IAAAA,UAAU,EAAE,IAJ2C;AAKvDC,IAAAA,YAAY,EAAE;AALyC,GAA3D;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,MAA5C,EAAoD;AAChDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAK/B,MAAL,IAAe,KAAKA,MAAL,CAAYoB,IAAlC;AACH,KAH+C;AAIhDsB,IAAAA,UAAU,EAAE,IAJoC;AAKhDC,IAAAA,YAAY,EAAE;AALkC,GAApD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,SAA5C,EAAuD;AACnDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAK/B,MAAL,IAAe,KAAKA,MAAL,CAAYiC,OAAlC;AACH,KAHkD;AAInDS,IAAAA,UAAU,EAAE,IAJuC;AAKnDC,IAAAA,YAAY,EAAE;AALqC,GAAvD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,QAA5C,EAAsD;AAClDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAK/B,MAAL,IAAe,KAAKA,MAAL,CAAYmC,MAAlC;AACH,KAHiD;AAIlDO,IAAAA,UAAU,EAAE,IAJsC;AAKlDC,IAAAA,YAAY,EAAE;AALoC,GAAtD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,OAA5C,EAAqD;AACjDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKR,SAAZ;AACH,KAHgD;AAIjDmB,IAAAA,UAAU,EAAE,IAJqC;AAKjDC,IAAAA,YAAY,EAAE;AALmC,GAArD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,OAA5C,EAAqD;AACjDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKV,UAAZ;AACH,KAHgD;AAIjDqB,IAAAA,UAAU,EAAE,IAJqC;AAKjDC,IAAAA,YAAY,EAAE;AALmC,GAArD;AAOAN,EAAAA,MAAM,CAACC,cAAP,CAAsB1C,UAAU,CAAC2C,SAAjC,EAA4C,aAA5C,EAA2D;AACvDR,IAAAA,GAAG,EAAE,eAAY;AACb,aAAO,KAAKd,YAAZ;AACH,KAHsD;AAIvDyB,IAAAA,UAAU,EAAE,IAJ2C;AAKvDC,IAAAA,YAAY,EAAE;AALyC,GAA3D;AAOA;AACJ;AACA;;AACI/C,EAAAA,UAAU,CAAC2C,SAAX,CAAqBS,SAArB,GAAiC,YAAY;AACzC,WAAO;AACHC,MAAAA,IAAI,EAAE,KAAK1B,SAAL,CAAeyB,SAAf,EADH;AAEHE,MAAAA,KAAK,EAAE,KAAK7B,UAAL,CAAgB2B,SAAhB,EAFJ;AAGHF,MAAAA,OAAO,EAAE,KAAK7B,YAAL,CAAkB+B,SAAlB;AAHN,KAAP;AAKH,GAND;AAOA;AACJ;AACA;;;AACIpD,EAAAA,UAAU,CAAC2C,SAAX,CAAqBX,eAArB,GAAuC,UAAUJ,KAAV,EAAiBpB,WAAjB,EAA8B;AACjE,WAAOoB,KAAK,CAAC2B,MAAN,CAAaC,MAAb,CAAoBhD,WAApB,EAAiCQ,IAAjC,CAAsCyC,MAA7C;AACH,GAFD;;AAGAzD,EAAAA,UAAU,CAAC2C,SAAX,CAAqBT,WAArB,GAAmC,UAAUwB,KAAV,EAAiB;AAChD,WAAO,IAAIC,IAAJ,CAASD,KAAK,GAAG,GAAjB,CAAP;AACH,GAFD;;AAGA,SAAO1D,UAAP;AACH,CAnM+B,EAAhC;;AAoMA,SAASA,UAAT","sourcesContent":["/**\n * @license\n * Copyright 2018-2021 Streamlit Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Table, Type } from \"apache-arrow\";\nvar ArrowTable = /** @class */ (function () {\n    function ArrowTable(dataBuffer, indexBuffer, columnsBuffer, styler) {\n        var _this = this;\n        this.getCell = function (rowIndex, columnIndex) {\n            var isBlankCell = rowIndex < _this.headerRows && columnIndex < _this.headerColumns;\n            var isIndexCell = rowIndex >= _this.headerRows && columnIndex < _this.headerColumns;\n            var isColumnsCell = rowIndex < _this.headerRows && columnIndex >= _this.headerColumns;\n            if (isBlankCell) {\n                var classNames = [\"blank\"];\n                if (columnIndex > 0) {\n                    classNames.push(\"level\" + rowIndex);\n                }\n                return {\n                    type: \"blank\",\n                    classNames: classNames.join(\" \"),\n                    content: \"\"\n                };\n            }\n            else if (isColumnsCell) {\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"col_heading\",\n                    \"level\" + rowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                return {\n                    type: \"columns\",\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.columnsTable, dataColumnIndex, rowIndex)\n                };\n            }\n            else if (isIndexCell) {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var classNames = [\n                    \"row_heading\",\n                    \"level\" + columnIndex,\n                    \"row\" + dataRowIndex\n                ];\n                return {\n                    type: \"index\",\n                    id: \"T_\" + _this.uuid + \"level\" + columnIndex + \"_row\" + dataRowIndex,\n                    classNames: classNames.join(\" \"),\n                    content: _this.getContent(_this.indexTable, dataRowIndex, columnIndex)\n                };\n            }\n            else {\n                var dataRowIndex = rowIndex - _this.headerRows;\n                var dataColumnIndex = columnIndex - _this.headerColumns;\n                var classNames = [\n                    \"data\",\n                    \"row\" + dataRowIndex,\n                    \"col\" + dataColumnIndex\n                ];\n                var content = _this.styler\n                    ? _this.getContent(_this.styler.displayValuesTable, dataRowIndex, dataColumnIndex)\n                    : _this.getContent(_this.dataTable, dataRowIndex, dataColumnIndex);\n                return {\n                    type: \"data\",\n                    id: \"T_\" + _this.uuid + \"row\" + dataRowIndex + \"_col\" + dataColumnIndex,\n                    classNames: classNames.join(\" \"),\n                    content: content\n                };\n            }\n        };\n        this.getContent = function (table, rowIndex, columnIndex) {\n            var column = table.getColumnAt(columnIndex);\n            if (column === null) {\n                return \"\";\n            }\n            var columnTypeId = _this.getColumnTypeId(table, columnIndex);\n            switch (columnTypeId) {\n                case Type.Timestamp: {\n                    return _this.nanosToDate(column.get(rowIndex));\n                }\n                default: {\n                    return column.get(rowIndex);\n                }\n            }\n        };\n        this.dataTable = Table.from(dataBuffer);\n        this.indexTable = Table.from(indexBuffer);\n        this.columnsTable = Table.from(columnsBuffer);\n        this.styler = styler\n            ? {\n                caption: styler.caption,\n                displayValuesTable: Table.from(styler.displayValues),\n                styles: styler.styles,\n                uuid: styler.uuid\n            }\n            : undefined;\n    }\n    Object.defineProperty(ArrowTable.prototype, \"rows\", {\n        get: function () {\n            return this.indexTable.length + this.columnsTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columns\", {\n        get: function () {\n            return this.indexTable.numCols + this.columnsTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerRows\", {\n        get: function () {\n            return this.rows - this.dataRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"headerColumns\", {\n        get: function () {\n            return this.columns - this.dataColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataRows\", {\n        get: function () {\n            return this.dataTable.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"dataColumns\", {\n        get: function () {\n            return this.dataTable.numCols;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"uuid\", {\n        get: function () {\n            return this.styler && this.styler.uuid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"caption\", {\n        get: function () {\n            return this.styler && this.styler.caption;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"styles\", {\n        get: function () {\n            return this.styler && this.styler.styles;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"table\", {\n        get: function () {\n            return this.dataTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"index\", {\n        get: function () {\n            return this.indexTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArrowTable.prototype, \"columnTable\", {\n        get: function () {\n            return this.columnsTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Serialize arrow table.\n     */\n    ArrowTable.prototype.serialize = function () {\n        return {\n            data: this.dataTable.serialize(),\n            index: this.indexTable.serialize(),\n            columns: this.columnsTable.serialize()\n        };\n    };\n    /**\n     * Returns apache-arrow specific typeId of column.\n     */\n    ArrowTable.prototype.getColumnTypeId = function (table, columnIndex) {\n        return table.schema.fields[columnIndex].type.typeId;\n    };\n    ArrowTable.prototype.nanosToDate = function (nanos) {\n        return new Date(nanos / 1e6);\n    };\n    return ArrowTable;\n}());\nexport { ArrowTable };\n"]},"metadata":{},"sourceType":"module"}