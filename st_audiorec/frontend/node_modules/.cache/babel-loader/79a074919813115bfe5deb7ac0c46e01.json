{"ast":null,"code":"import _classCallCheck from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/louiskrause/neuefische/RespiratoryApp/st_audiorec/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\n// automatically generated by the FlatBuffers compiler, do not modify\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\n\nexport var org;\n\n(function (org) {\n  var apache;\n\n  (function (apache) {\n    var arrow;\n\n    (function (arrow) {\n      var flatbuf;\n\n      (function (flatbuf) {\n        var Footer = /*#__PURE__*/function () {\n          function Footer() {\n            _classCallCheck(this, Footer);\n\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Footer\n           */\n\n\n          _createClass(Footer, [{\n            key: \"__init\",\n            value: function __init(i, bb) {\n              this.bb_pos = i;\n              this.bb = bb;\n              return this;\n            }\n            /**\n             * @param flatbuffers.ByteBuffer bb\n             * @param Footer= obj\n             * @returns Footer\n             */\n\n          }, {\n            key: \"version\",\n            value:\n            /**\n             * @returns org.apache.arrow.flatbuf.MetadataVersion\n             */\n            function version() {\n              var offset = this.bb.__offset(this.bb_pos, 4);\n\n              return offset ?\n              /**  */\n              this.bb.readInt16(this.bb_pos + offset) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n            }\n            /**\n             * @param org.apache.arrow.flatbuf.Schema= obj\n             * @returns org.apache.arrow.flatbuf.Schema|null\n             */\n\n          }, {\n            key: \"schema\",\n            value: function schema(obj) {\n              var offset = this.bb.__offset(this.bb_pos, 6);\n\n              return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n            }\n            /**\n             * @param number index\n             * @param org.apache.arrow.flatbuf.Block= obj\n             * @returns org.apache.arrow.flatbuf.Block\n             */\n\n          }, {\n            key: \"dictionaries\",\n            value: function dictionaries(index, obj) {\n              var offset = this.bb.__offset(this.bb_pos, 8);\n\n              return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n            }\n            /**\n             * @returns number\n             */\n\n          }, {\n            key: \"dictionariesLength\",\n            value: function dictionariesLength() {\n              var offset = this.bb.__offset(this.bb_pos, 8);\n\n              return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n            }\n            /**\n             * @param number index\n             * @param org.apache.arrow.flatbuf.Block= obj\n             * @returns org.apache.arrow.flatbuf.Block\n             */\n\n          }, {\n            key: \"recordBatches\",\n            value: function recordBatches(index, obj) {\n              var offset = this.bb.__offset(this.bb_pos, 10);\n\n              return offset ? (obj || new org.apache.arrow.flatbuf.Block()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n            }\n            /**\n             * @returns number\n             */\n\n          }, {\n            key: \"recordBatchesLength\",\n            value: function recordBatchesLength() {\n              var offset = this.bb.__offset(this.bb_pos, 10);\n\n              return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             */\n\n          }], [{\n            key: \"getRootAsFooter\",\n            value: function getRootAsFooter(bb, obj) {\n              return (obj || new Footer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n            }\n          }, {\n            key: \"startFooter\",\n            value: function startFooter(builder) {\n              builder.startObject(4);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param org.apache.arrow.flatbuf.MetadataVersion version\n             */\n\n          }, {\n            key: \"addVersion\",\n            value: function addVersion(builder, version) {\n              builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset schemaOffset\n             */\n\n          }, {\n            key: \"addSchema\",\n            value: function addSchema(builder, schemaOffset) {\n              builder.addFieldOffset(1, schemaOffset, 0);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset dictionariesOffset\n             */\n\n          }, {\n            key: \"addDictionaries\",\n            value: function addDictionaries(builder, dictionariesOffset) {\n              builder.addFieldOffset(2, dictionariesOffset, 0);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param number numElems\n             */\n\n          }, {\n            key: \"startDictionariesVector\",\n            value: function startDictionariesVector(builder, numElems) {\n              builder.startVector(24, numElems, 8);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset recordBatchesOffset\n             */\n\n          }, {\n            key: \"addRecordBatches\",\n            value: function addRecordBatches(builder, recordBatchesOffset) {\n              builder.addFieldOffset(3, recordBatchesOffset, 0);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param number numElems\n             */\n\n          }, {\n            key: \"startRecordBatchesVector\",\n            value: function startRecordBatchesVector(builder, numElems) {\n              builder.startVector(24, numElems, 8);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @returns flatbuffers.Offset\n             */\n\n          }, {\n            key: \"endFooter\",\n            value: function endFooter(builder) {\n              var offset = builder.endObject();\n              return offset;\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Offset offset\n             */\n\n          }, {\n            key: \"finishFooterBuffer\",\n            value: function finishFooterBuffer(builder, offset) {\n              builder.finish(offset);\n            }\n          }, {\n            key: \"createFooter\",\n            value: function createFooter(builder, version, schemaOffset, dictionariesOffset, recordBatchesOffset) {\n              Footer.startFooter(builder);\n              Footer.addVersion(builder, version);\n              Footer.addSchema(builder, schemaOffset);\n              Footer.addDictionaries(builder, dictionariesOffset);\n              Footer.addRecordBatches(builder, recordBatchesOffset);\n              return Footer.endFooter(builder);\n            }\n          }]);\n\n          return Footer;\n        }();\n\n        flatbuf.Footer = Footer;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));\n/**\n * @constructor\n */\n\n\n(function (org) {\n  var apache;\n\n  (function (apache) {\n    var arrow;\n\n    (function (arrow) {\n      var flatbuf;\n\n      (function (flatbuf) {\n        var Block = /*#__PURE__*/function () {\n          function Block() {\n            _classCallCheck(this, Block);\n\n            this.bb = null;\n            this.bb_pos = 0;\n          }\n          /**\n           * @param number i\n           * @param flatbuffers.ByteBuffer bb\n           * @returns Block\n           */\n\n\n          _createClass(Block, [{\n            key: \"__init\",\n            value: function __init(i, bb) {\n              this.bb_pos = i;\n              this.bb = bb;\n              return this;\n            }\n            /**\n             * Index to the start of the RecordBlock (note this is past the Message header)\n             *\n             * @returns flatbuffers.Long\n             */\n\n          }, {\n            key: \"offset\",\n            value: function offset() {\n              return this.bb.readInt64(this.bb_pos);\n            }\n            /**\n             * Length of the metadata\n             *\n             * @returns number\n             */\n\n          }, {\n            key: \"metaDataLength\",\n            value: function metaDataLength() {\n              return this.bb.readInt32(this.bb_pos + 8);\n            }\n            /**\n             * Length of the data (this is aligned so there can be a gap between this and\n             * the metatdata).\n             *\n             * @returns flatbuffers.Long\n             */\n\n          }, {\n            key: \"bodyLength\",\n            value: function bodyLength() {\n              return this.bb.readInt64(this.bb_pos + 16);\n            }\n            /**\n             * @param flatbuffers.Builder builder\n             * @param flatbuffers.Long offset\n             * @param number metaDataLength\n             * @param flatbuffers.Long bodyLength\n             * @returns flatbuffers.Offset\n             */\n\n          }], [{\n            key: \"createBlock\",\n            value: function createBlock(builder, offset, metaDataLength, bodyLength) {\n              builder.prep(8, 24);\n              builder.writeInt64(bodyLength);\n              builder.pad(4);\n              builder.writeInt32(metaDataLength);\n              builder.writeInt64(offset);\n              return builder.offset();\n            }\n          }]);\n\n          return Block;\n        }();\n\n        flatbuf.Block = Block;\n      })(flatbuf = arrow.flatbuf || (arrow.flatbuf = {}));\n    })(arrow = apache.arrow || (apache.arrow = {}));\n  })(apache = org.apache || (org.apache = {}));\n})(org || (org = {}));","map":{"version":3,"mappings":"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","names":["NS7624605610262437867","org","Footer","i","bb","bb_pos","offset","__offset","readInt16","apache","arrow","flatbuf","MetadataVersion","V1","obj","Schema","__init","__indirect","index","Block","__vector","__vector_len","readInt32","position","builder","startObject","version","addFieldInt16","schemaOffset","addFieldOffset","dictionariesOffset","numElems","startVector","recordBatchesOffset","endObject","finish","startFooter","addVersion","addSchema","addDictionaries","addRecordBatches","endFooter","readInt64","metaDataLength","bodyLength","prep","writeInt64","pad","writeInt32"],"sources":["fb/File.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport { flatbuffers } from 'flatbuffers';\nimport * as NS7624605610262437867 from './Schema';\n/**\n * ----------------------------------------------------------------------\n * Arrow File metadata\n *\n *\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Footer {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Footer\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Footer {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Footer= obj\n         * @returns Footer\n         */\n        static getRootAsFooter(bb: flatbuffers.ByteBuffer, obj?: Footer): Footer {\n            return (obj || new Footer).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n\n        /**\n         * @returns org.apache.arrow.flatbuf.MetadataVersion\n         */\n        version(): NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion {\n            let offset = this.bb!.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1;\n        }\n\n        /**\n         * @param org.apache.arrow.flatbuf.Schema= obj\n         * @returns org.apache.arrow.flatbuf.Schema|null\n         */\n        schema(obj?: NS7624605610262437867.org.apache.arrow.flatbuf.Schema): NS7624605610262437867.org.apache.arrow.flatbuf.Schema | null {\n            let offset = this.bb!.__offset(this.bb_pos, 6);\n            return offset ? (obj || new NS7624605610262437867.org.apache.arrow.flatbuf.Schema).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        dictionaries(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        dictionariesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 8);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param number index\n         * @param org.apache.arrow.flatbuf.Block= obj\n         * @returns org.apache.arrow.flatbuf.Block\n         */\n        recordBatches(index: number, obj?: org.apache.arrow.flatbuf.Block): org.apache.arrow.flatbuf.Block | null {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? (obj || new org.apache.arrow.flatbuf.Block).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;\n        }\n\n        /**\n         * @returns number\n         */\n        recordBatchesLength(): number {\n            let offset = this.bb!.__offset(this.bb_pos, 10);\n            return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startFooter(builder: flatbuffers.Builder) {\n            builder.startObject(4);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param org.apache.arrow.flatbuf.MetadataVersion version\n         */\n        static addVersion(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion) {\n            builder.addFieldInt16(0, version, NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion.V1);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset schemaOffset\n         */\n        static addSchema(builder: flatbuffers.Builder, schemaOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(1, schemaOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dictionariesOffset\n         */\n        static addDictionaries(builder: flatbuffers.Builder, dictionariesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(2, dictionariesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDictionariesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset recordBatchesOffset\n         */\n        static addRecordBatches(builder: flatbuffers.Builder, recordBatchesOffset: flatbuffers.Offset) {\n            builder.addFieldOffset(3, recordBatchesOffset, 0);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startRecordBatchesVector(builder: flatbuffers.Builder, numElems: number) {\n            builder.startVector(24, numElems, 8);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endFooter(builder: flatbuffers.Builder): flatbuffers.Offset {\n            let offset = builder.endObject();\n            return offset;\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offset\n         */\n        static finishFooterBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n            builder.finish(offset);\n        }\n\n        static createFooter(builder: flatbuffers.Builder, version: NS7624605610262437867.org.apache.arrow.flatbuf.MetadataVersion, schemaOffset: flatbuffers.Offset, dictionariesOffset: flatbuffers.Offset, recordBatchesOffset: flatbuffers.Offset): flatbuffers.Offset {\n            Footer.startFooter(builder);\n            Footer.addVersion(builder, version);\n            Footer.addSchema(builder, schemaOffset);\n            Footer.addDictionaries(builder, dictionariesOffset);\n            Footer.addRecordBatches(builder, recordBatchesOffset);\n            return Footer.endFooter(builder);\n        }\n    }\n}\n/**\n * @constructor\n */\nexport namespace org.apache.arrow.flatbuf {\n    export class Block {\n        bb: flatbuffers.ByteBuffer | null = null;\n\n        bb_pos: number = 0;\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Block\n         */\n        __init(i: number, bb: flatbuffers.ByteBuffer): Block {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n\n        /**\n         * Index to the start of the RecordBlock (note this is past the Message header)\n         *\n         * @returns flatbuffers.Long\n         */\n        offset(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos);\n        }\n\n        /**\n         * Length of the metadata\n         *\n         * @returns number\n         */\n        metaDataLength(): number {\n            return this.bb!.readInt32(this.bb_pos + 8);\n        }\n\n        /**\n         * Length of the data (this is aligned so there can be a gap between this and\n         * the metatdata).\n         *\n         * @returns flatbuffers.Long\n         */\n        bodyLength(): flatbuffers.Long {\n            return this.bb!.readInt64(this.bb_pos + 16);\n        }\n\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long offset\n         * @param number metaDataLength\n         * @param flatbuffers.Long bodyLength\n         * @returns flatbuffers.Offset\n         */\n        static createBlock(builder: flatbuffers.Builder, offset: flatbuffers.Long, metaDataLength: number, bodyLength: flatbuffers.Long): flatbuffers.Offset {\n            builder.prep(8, 24);\n            builder.writeInt64(bodyLength);\n            builder.pad(4);\n            builder.writeInt32(metaDataLength);\n            builder.writeInt64(offset);\n            return builder.offset();\n        }\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}